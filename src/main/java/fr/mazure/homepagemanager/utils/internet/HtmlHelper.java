package fr.mazure.homepagemanager.utils.internet;

import java.io.StringWriter;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.nio.charset.UnsupportedCharsetException;
import java.util.HashMap;
import java.util.Optional;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import fr.mazure.homepagemanager.utils.FileHelper;
import fr.mazure.homepagemanager.utils.FileSection;
import fr.mazure.homepagemanager.utils.Logger;

/**
 * Methods to manage HTML
 */
public class HtmlHelper {

    // from https://html.spec.whatwg.org/multipage/named-characters.html
    private static final HashMap<String, String> lookupMap;
    static {
        lookupMap = new HashMap<>();
        lookupMap.put("&AElig", "\u00C6");
        lookupMap.put("&AElig;", "\u00C6");
        lookupMap.put("&AMP", "\u0026");
        lookupMap.put("&AMP;", "\u0026");
        lookupMap.put("&Aacute", "\u00C1");
        lookupMap.put("&Aacute;", "\u00C1");
        lookupMap.put("&Abreve;", "\u0102");
        lookupMap.put("&Acirc", "\u00C2");
        lookupMap.put("&Acirc;", "\u00C2");
        lookupMap.put("&Acy;", "\u0410");
        lookupMap.put("&Afr;", "\uD835\uDD04");
        lookupMap.put("&Agrave", "\u00C0");
        lookupMap.put("&Agrave;", "\u00C0");
        lookupMap.put("&Alpha;", "\u0391");
        lookupMap.put("&Amacr;", "\u0100");
        lookupMap.put("&And;", "\u2A53");
        lookupMap.put("&Aogon;", "\u0104");
        lookupMap.put("&Aopf;", "\uD835\uDD38");
        lookupMap.put("&ApplyFunction;", "\u2061");
        lookupMap.put("&Aring", "\u00C5");
        lookupMap.put("&Aring;", "\u00C5");
        lookupMap.put("&Ascr;", "\uD835\uDC9C");
        lookupMap.put("&Assign;", "\u2254");
        lookupMap.put("&Atilde", "\u00C3");
        lookupMap.put("&Atilde;", "\u00C3");
        lookupMap.put("&Auml", "\u00C4");
        lookupMap.put("&Auml;", "\u00C4");
        lookupMap.put("&Backslash;", "\u2216");
        lookupMap.put("&Barv;", "\u2AE7");
        lookupMap.put("&Barwed;", "\u2306");
        lookupMap.put("&Bcy;", "\u0411");
        lookupMap.put("&Because;", "\u2235");
        lookupMap.put("&Bernoullis;", "\u212C");
        lookupMap.put("&Beta;", "\u0392");
        lookupMap.put("&Bfr;", "\uD835\uDD05");
        lookupMap.put("&Bopf;", "\uD835\uDD39");
        lookupMap.put("&Breve;", "\u02D8");
        lookupMap.put("&Bscr;", "\u212C");
        lookupMap.put("&Bumpeq;", "\u224E");
        lookupMap.put("&CHcy;", "\u0427");
        lookupMap.put("&COPY", "\u00A9");
        lookupMap.put("&COPY;", "\u00A9");
        lookupMap.put("&Cacute;", "\u0106");
        lookupMap.put("&Cap;", "\u22D2");
        lookupMap.put("&CapitalDifferentialD;", "\u2145");
        lookupMap.put("&Cayleys;", "\u212D");
        lookupMap.put("&Ccaron;", "\u010C");
        lookupMap.put("&Ccedil", "\u00C7");
        lookupMap.put("&Ccedil;", "\u00C7");
        lookupMap.put("&Ccirc;", "\u0108");
        lookupMap.put("&Cconint;", "\u2230");
        lookupMap.put("&Cdot;", "\u010A");
        lookupMap.put("&Cedilla;", "\u00B8");
        lookupMap.put("&CenterDot;", "\u00B7");
        lookupMap.put("&Cfr;", "\u212D");
        lookupMap.put("&Chi;", "\u03A7");
        lookupMap.put("&CircleDot;", "\u2299");
        lookupMap.put("&CircleMinus;", "\u2296");
        lookupMap.put("&CirclePlus;", "\u2295");
        lookupMap.put("&CircleTimes;", "\u2297");
        lookupMap.put("&ClockwiseContourIntegral;", "\u2232");
        lookupMap.put("&CloseCurlyDoubleQuote;", "\u201D");
        lookupMap.put("&CloseCurlyQuote;", "\u2019");
        lookupMap.put("&Colon;", "\u2237");
        lookupMap.put("&Colone;", "\u2A74");
        lookupMap.put("&Congruent;", "\u2261");
        lookupMap.put("&Conint;", "\u222F");
        lookupMap.put("&ContourIntegral;", "\u222E");
        lookupMap.put("&Copf;", "\u2102");
        lookupMap.put("&Coproduct;", "\u2210");
        lookupMap.put("&CounterClockwiseContourIntegral;", "\u2233");
        lookupMap.put("&Cross;", "\u2A2F");
        lookupMap.put("&Cscr;", "\uD835\uDC9E");
        lookupMap.put("&Cup;", "\u22D3");
        lookupMap.put("&CupCap;", "\u224D");
        lookupMap.put("&DD;", "\u2145");
        lookupMap.put("&DDotrahd;", "\u2911");
        lookupMap.put("&DJcy;", "\u0402");
        lookupMap.put("&DScy;", "\u0405");
        lookupMap.put("&DZcy;", "\u040F");
        lookupMap.put("&Dagger;", "\u2021");
        lookupMap.put("&Darr;", "\u21A1");
        lookupMap.put("&Dashv;", "\u2AE4");
        lookupMap.put("&Dcaron;", "\u010E");
        lookupMap.put("&Dcy;", "\u0414");
        lookupMap.put("&Del;", "\u2207");
        lookupMap.put("&Delta;", "\u0394");
        lookupMap.put("&Dfr;", "\uD835\uDD07");
        lookupMap.put("&DiacriticalAcute;", "\u00B4");
        lookupMap.put("&DiacriticalDot;", "\u02D9");
        lookupMap.put("&DiacriticalDoubleAcute;", "\u02DD");
        lookupMap.put("&DiacriticalGrave;", "\u0060");
        lookupMap.put("&DiacriticalTilde;", "\u02DC");
        lookupMap.put("&Diamond;", "\u22C4");
        lookupMap.put("&DifferentialD;", "\u2146");
        lookupMap.put("&Dopf;", "\uD835\uDD3B");
        lookupMap.put("&Dot;", "\u00A8");
        lookupMap.put("&DotDot;", "\u20DC");
        lookupMap.put("&DotEqual;", "\u2250");
        lookupMap.put("&DoubleContourIntegral;", "\u222F");
        lookupMap.put("&DoubleDot;", "\u00A8");
        lookupMap.put("&DoubleDownArrow;", "\u21D3");
        lookupMap.put("&DoubleLeftArrow;", "\u21D0");
        lookupMap.put("&DoubleLeftRightArrow;", "\u21D4");
        lookupMap.put("&DoubleLeftTee;", "\u2AE4");
        lookupMap.put("&DoubleLongLeftArrow;", "\u27F8");
        lookupMap.put("&DoubleLongLeftRightArrow;", "\u27FA");
        lookupMap.put("&DoubleLongRightArrow;", "\u27F9");
        lookupMap.put("&DoubleRightArrow;", "\u21D2");
        lookupMap.put("&DoubleRightTee;", "\u22A8");
        lookupMap.put("&DoubleUpArrow;", "\u21D1");
        lookupMap.put("&DoubleUpDownArrow;", "\u21D5");
        lookupMap.put("&DoubleVerticalBar;", "\u2225");
        lookupMap.put("&DownArrow;", "\u2193");
        lookupMap.put("&DownArrowBar;", "\u2913");
        lookupMap.put("&DownArrowUpArrow;", "\u21F5");
        lookupMap.put("&DownBreve;", "\u0311");
        lookupMap.put("&DownLeftRightVector;", "\u2950");
        lookupMap.put("&DownLeftTeeVector;", "\u295E");
        lookupMap.put("&DownLeftVector;", "\u21BD");
        lookupMap.put("&DownLeftVectorBar;", "\u2956");
        lookupMap.put("&DownRightTeeVector;", "\u295F");
        lookupMap.put("&DownRightVector;", "\u21C1");
        lookupMap.put("&DownRightVectorBar;", "\u2957");
        lookupMap.put("&DownTee;", "\u22A4");
        lookupMap.put("&DownTeeArrow;", "\u21A7");
        lookupMap.put("&Downarrow;", "\u21D3");
        lookupMap.put("&Dscr;", "\uD835\uDC9F");
        lookupMap.put("&Dstrok;", "\u0110");
        lookupMap.put("&ENG;", "\u014A");
        lookupMap.put("&ETH", "\u00D0");
        lookupMap.put("&ETH;", "\u00D0");
        lookupMap.put("&Eacute", "\u00C9");
        lookupMap.put("&Eacute;", "\u00C9");
        lookupMap.put("&Ecaron;", "\u011A");
        lookupMap.put("&Ecirc", "\u00CA");
        lookupMap.put("&Ecirc;", "\u00CA");
        lookupMap.put("&Ecy;", "\u042D");
        lookupMap.put("&Edot;", "\u0116");
        lookupMap.put("&Efr;", "\uD835\uDD08");
        lookupMap.put("&Egrave", "\u00C8");
        lookupMap.put("&Egrave;", "\u00C8");
        lookupMap.put("&Element;", "\u2208");
        lookupMap.put("&Emacr;", "\u0112");
        lookupMap.put("&EmptySmallSquare;", "\u25FB");
        lookupMap.put("&EmptyVerySmallSquare;", "\u25AB");
        lookupMap.put("&Eogon;", "\u0118");
        lookupMap.put("&Eopf;", "\uD835\uDD3C");
        lookupMap.put("&Epsilon;", "\u0395");
        lookupMap.put("&Equal;", "\u2A75");
        lookupMap.put("&EqualTilde;", "\u2242");
        lookupMap.put("&Equilibrium;", "\u21CC");
        lookupMap.put("&Escr;", "\u2130");
        lookupMap.put("&Esim;", "\u2A73");
        lookupMap.put("&Eta;", "\u0397");
        lookupMap.put("&Euml", "\u00CB");
        lookupMap.put("&Euml;", "\u00CB");
        lookupMap.put("&Exists;", "\u2203");
        lookupMap.put("&ExponentialE;", "\u2147");
        lookupMap.put("&Fcy;", "\u0424");
        lookupMap.put("&Ffr;", "\uD835\uDD09");
        lookupMap.put("&FilledSmallSquare;", "\u25FC");
        lookupMap.put("&FilledVerySmallSquare;", "\u25AA");
        lookupMap.put("&Fopf;", "\uD835\uDD3D");
        lookupMap.put("&ForAll;", "\u2200");
        lookupMap.put("&Fouriertrf;", "\u2131");
        lookupMap.put("&Fscr;", "\u2131");
        lookupMap.put("&GJcy;", "\u0403");
        lookupMap.put("&GT", "\u003E");
        lookupMap.put("&GT;", "\u003E");
        lookupMap.put("&Gamma;", "\u0393");
        lookupMap.put("&Gammad;", "\u03DC");
        lookupMap.put("&Gbreve;", "\u011E");
        lookupMap.put("&Gcedil;", "\u0122");
        lookupMap.put("&Gcirc;", "\u011C");
        lookupMap.put("&Gcy;", "\u0413");
        lookupMap.put("&Gdot;", "\u0120");
        lookupMap.put("&Gfr;", "\uD835\uDD0A");
        lookupMap.put("&Gg;", "\u22D9");
        lookupMap.put("&Gopf;", "\uD835\uDD3E");
        lookupMap.put("&GreaterEqual;", "\u2265");
        lookupMap.put("&GreaterEqualLess;", "\u22DB");
        lookupMap.put("&GreaterFullEqual;", "\u2267");
        lookupMap.put("&GreaterGreater;", "\u2AA2");
        lookupMap.put("&GreaterLess;", "\u2277");
        lookupMap.put("&GreaterSlantEqual;", "\u2A7E");
        lookupMap.put("&GreaterTilde;", "\u2273");
        lookupMap.put("&Gscr;", "\uD835\uDCA2");
        lookupMap.put("&Gt;", "\u226B");
        lookupMap.put("&HARDcy;", "\u042A");
        lookupMap.put("&Hacek;", "\u02C7");
        lookupMap.put("&Hat;", "\u005E");
        lookupMap.put("&Hcirc;", "\u0124");
        lookupMap.put("&Hfr;", "\u210C");
        lookupMap.put("&HilbertSpace;", "\u210B");
        lookupMap.put("&Hopf;", "\u210D");
        lookupMap.put("&HorizontalLine;", "\u2500");
        lookupMap.put("&Hscr;", "\u210B");
        lookupMap.put("&Hstrok;", "\u0126");
        lookupMap.put("&HumpDownHump;", "\u224E");
        lookupMap.put("&HumpEqual;", "\u224F");
        lookupMap.put("&IEcy;", "\u0415");
        lookupMap.put("&IJlig;", "\u0132");
        lookupMap.put("&IOcy;", "\u0401");
        lookupMap.put("&Iacute", "\u00CD");
        lookupMap.put("&Iacute;", "\u00CD");
        lookupMap.put("&Icirc", "\u00CE");
        lookupMap.put("&Icirc;", "\u00CE");
        lookupMap.put("&Icy;", "\u0418");
        lookupMap.put("&Idot;", "\u0130");
        lookupMap.put("&Ifr;", "\u2111");
        lookupMap.put("&Igrave", "\u00CC");
        lookupMap.put("&Igrave;", "\u00CC");
        lookupMap.put("&Im;", "\u2111");
        lookupMap.put("&Imacr;", "\u012A");
        lookupMap.put("&ImaginaryI;", "\u2148");
        lookupMap.put("&Implies;", "\u21D2");
        lookupMap.put("&Int;", "\u222C");
        lookupMap.put("&Integral;", "\u222B");
        lookupMap.put("&Intersection;", "\u22C2");
        lookupMap.put("&InvisibleComma;", "\u2063");
        lookupMap.put("&InvisibleTimes;", "\u2062");
        lookupMap.put("&Iogon;", "\u012E");
        lookupMap.put("&Iopf;", "\uD835\uDD40");
        lookupMap.put("&Iota;", "\u0399");
        lookupMap.put("&Iscr;", "\u2110");
        lookupMap.put("&Itilde;", "\u0128");
        lookupMap.put("&Iukcy;", "\u0406");
        lookupMap.put("&Iuml", "\u00CF");
        lookupMap.put("&Iuml;", "\u00CF");
        lookupMap.put("&Jcirc;", "\u0134");
        lookupMap.put("&Jcy;", "\u0419");
        lookupMap.put("&Jfr;", "\uD835\uDD0D");
        lookupMap.put("&Jopf;", "\uD835\uDD41");
        lookupMap.put("&Jscr;", "\uD835\uDCA5");
        lookupMap.put("&Jsercy;", "\u0408");
        lookupMap.put("&Jukcy;", "\u0404");
        lookupMap.put("&KHcy;", "\u0425");
        lookupMap.put("&KJcy;", "\u040C");
        lookupMap.put("&Kappa;", "\u039A");
        lookupMap.put("&Kcedil;", "\u0136");
        lookupMap.put("&Kcy;", "\u041A");
        lookupMap.put("&Kfr;", "\uD835\uDD0E");
        lookupMap.put("&Kopf;", "\uD835\uDD42");
        lookupMap.put("&Kscr;", "\uD835\uDCA6");
        lookupMap.put("&LJcy;", "\u0409");
        lookupMap.put("&LT", "\u003C");
        lookupMap.put("&LT;", "\u003C");
        lookupMap.put("&Lacute;", "\u0139");
        lookupMap.put("&Lambda;", "\u039B");
        lookupMap.put("&Lang;", "\u27EA");
        lookupMap.put("&Laplacetrf;", "\u2112");
        lookupMap.put("&Larr;", "\u219E");
        lookupMap.put("&Lcaron;", "\u013D");
        lookupMap.put("&Lcedil;", "\u013B");
        lookupMap.put("&Lcy;", "\u041B");
        lookupMap.put("&LeftAngleBracket;", "\u27E8");
        lookupMap.put("&LeftArrow;", "\u2190");
        lookupMap.put("&LeftArrowBar;", "\u21E4");
        lookupMap.put("&LeftArrowRightArrow;", "\u21C6");
        lookupMap.put("&LeftCeiling;", "\u2308");
        lookupMap.put("&LeftDoubleBracket;", "\u27E6");
        lookupMap.put("&LeftDownTeeVector;", "\u2961");
        lookupMap.put("&LeftDownVector;", "\u21C3");
        lookupMap.put("&LeftDownVectorBar;", "\u2959");
        lookupMap.put("&LeftFloor;", "\u230A");
        lookupMap.put("&LeftRightArrow;", "\u2194");
        lookupMap.put("&LeftRightVector;", "\u294E");
        lookupMap.put("&LeftTee;", "\u22A3");
        lookupMap.put("&LeftTeeArrow;", "\u21A4");
        lookupMap.put("&LeftTeeVector;", "\u295A");
        lookupMap.put("&LeftTriangle;", "\u22B2");
        lookupMap.put("&LeftTriangleBar;", "\u29CF");
        lookupMap.put("&LeftTriangleEqual;", "\u22B4");
        lookupMap.put("&LeftUpDownVector;", "\u2951");
        lookupMap.put("&LeftUpTeeVector;", "\u2960");
        lookupMap.put("&LeftUpVector;", "\u21BF");
        lookupMap.put("&LeftUpVectorBar;", "\u2958");
        lookupMap.put("&LeftVector;", "\u21BC");
        lookupMap.put("&LeftVectorBar;", "\u2952");
        lookupMap.put("&Leftarrow;", "\u21D0");
        lookupMap.put("&Leftrightarrow;", "\u21D4");
        lookupMap.put("&LessEqualGreater;", "\u22DA");
        lookupMap.put("&LessFullEqual;", "\u2266");
        lookupMap.put("&LessGreater;", "\u2276");
        lookupMap.put("&LessLess;", "\u2AA1");
        lookupMap.put("&LessSlantEqual;", "\u2A7D");
        lookupMap.put("&LessTilde;", "\u2272");
        lookupMap.put("&Lfr;", "\uD835\uDD0F");
        lookupMap.put("&Ll;", "\u22D8");
        lookupMap.put("&Lleftarrow;", "\u21DA");
        lookupMap.put("&Lmidot;", "\u013F");
        lookupMap.put("&LongLeftArrow;", "\u27F5");
        lookupMap.put("&LongLeftRightArrow;", "\u27F7");
        lookupMap.put("&LongRightArrow;", "\u27F6");
        lookupMap.put("&Longleftarrow;", "\u27F8");
        lookupMap.put("&Longleftrightarrow;", "\u27FA");
        lookupMap.put("&Longrightarrow;", "\u27F9");
        lookupMap.put("&Lopf;", "\uD835\uDD43");
        lookupMap.put("&LowerLeftArrow;", "\u2199");
        lookupMap.put("&LowerRightArrow;", "\u2198");
        lookupMap.put("&Lscr;", "\u2112");
        lookupMap.put("&Lsh;", "\u21B0");
        lookupMap.put("&Lstrok;", "\u0141");
        lookupMap.put("&Lt;", "\u226A");
        lookupMap.put("&Map;", "\u2905");
        lookupMap.put("&Mcy;", "\u041C");
        lookupMap.put("&MediumSpace;", "\u205F");
        lookupMap.put("&Mellintrf;", "\u2133");
        lookupMap.put("&Mfr;", "\uD835\uDD10");
        lookupMap.put("&MinusPlus;", "\u2213");
        lookupMap.put("&Mopf;", "\uD835\uDD44");
        lookupMap.put("&Mscr;", "\u2133");
        lookupMap.put("&Mu;", "\u039C");
        lookupMap.put("&NJcy;", "\u040A");
        lookupMap.put("&Nacute;", "\u0143");
        lookupMap.put("&Ncaron;", "\u0147");
        lookupMap.put("&Ncedil;", "\u0145");
        lookupMap.put("&Ncy;", "\u041D");
        lookupMap.put("&NegativeMediumSpace;", "\u200B");
        lookupMap.put("&NegativeThickSpace;", "\u200B");
        lookupMap.put("&NegativeThinSpace;", "\u200B");
        lookupMap.put("&NegativeVeryThinSpace;", "\u200B");
        lookupMap.put("&NestedGreaterGreater;", "\u226B");
        lookupMap.put("&NestedLessLess;", "\u226A");
        lookupMap.put("&NewLine;", "\n");
        lookupMap.put("&Nfr;", "\uD835\uDD11");
        lookupMap.put("&NoBreak;", "\u2060");
        lookupMap.put("&NonBreakingSpace;", "\u00A0");
        lookupMap.put("&Nopf;", "\u2115");
        lookupMap.put("&Not;", "\u2AEC");
        lookupMap.put("&NotCongruent;", "\u2262");
        lookupMap.put("&NotCupCap;", "\u226D");
        lookupMap.put("&NotDoubleVerticalBar;", "\u2226");
        lookupMap.put("&NotElement;", "\u2209");
        lookupMap.put("&NotEqual;", "\u2260");
        lookupMap.put("&NotEqualTilde;", "\u2242\u0338");
        lookupMap.put("&NotExists;", "\u2204");
        lookupMap.put("&NotGreater;", "\u226F");
        lookupMap.put("&NotGreaterEqual;", "\u2271");
        lookupMap.put("&NotGreaterFullEqual;", "\u2267\u0338");
        lookupMap.put("&NotGreaterGreater;", "\u226B\u0338");
        lookupMap.put("&NotGreaterLess;", "\u2279");
        lookupMap.put("&NotGreaterSlantEqual;", "\u2A7E\u0338");
        lookupMap.put("&NotGreaterTilde;", "\u2275");
        lookupMap.put("&NotHumpDownHump;", "\u224E\u0338");
        lookupMap.put("&NotHumpEqual;", "\u224F\u0338");
        lookupMap.put("&NotLeftTriangle;", "\u22EA");
        lookupMap.put("&NotLeftTriangleBar;", "\u29CF\u0338");
        lookupMap.put("&NotLeftTriangleEqual;", "\u22EC");
        lookupMap.put("&NotLess;", "\u226E");
        lookupMap.put("&NotLessEqual;", "\u2270");
        lookupMap.put("&NotLessGreater;", "\u2278");
        lookupMap.put("&NotLessLess;", "\u226A\u0338");
        lookupMap.put("&NotLessSlantEqual;", "\u2A7D\u0338");
        lookupMap.put("&NotLessTilde;", "\u2274");
        lookupMap.put("&NotNestedGreaterGreater;", "\u2AA2\u0338");
        lookupMap.put("&NotNestedLessLess;", "\u2AA1\u0338");
        lookupMap.put("&NotPrecedes;", "\u2280");
        lookupMap.put("&NotPrecedesEqual;", "\u2AAF\u0338");
        lookupMap.put("&NotPrecedesSlantEqual;", "\u22E0");
        lookupMap.put("&NotReverseElement;", "\u220C");
        lookupMap.put("&NotRightTriangle;", "\u22EB");
        lookupMap.put("&NotRightTriangleBar;", "\u29D0\u0338");
        lookupMap.put("&NotRightTriangleEqual;", "\u22ED");
        lookupMap.put("&NotSquareSubset;", "\u228F\u0338");
        lookupMap.put("&NotSquareSubsetEqual;", "\u22E2");
        lookupMap.put("&NotSquareSuperset;", "\u2290\u0338");
        lookupMap.put("&NotSquareSupersetEqual;", "\u22E3");
        lookupMap.put("&NotSubset;", "\u2282\u20D2");
        lookupMap.put("&NotSubsetEqual;", "\u2288");
        lookupMap.put("&NotSucceeds;", "\u2281");
        lookupMap.put("&NotSucceedsEqual;", "\u2AB0\u0338");
        lookupMap.put("&NotSucceedsSlantEqual;", "\u22E1");
        lookupMap.put("&NotSucceedsTilde;", "\u227F\u0338");
        lookupMap.put("&NotSuperset;", "\u2283\u20D2");
        lookupMap.put("&NotSupersetEqual;", "\u2289");
        lookupMap.put("&NotTilde;", "\u2241");
        lookupMap.put("&NotTildeEqual;", "\u2244");
        lookupMap.put("&NotTildeFullEqual;", "\u2247");
        lookupMap.put("&NotTildeTilde;", "\u2249");
        lookupMap.put("&NotVerticalBar;", "\u2224");
        lookupMap.put("&Nscr;", "\uD835\uDCA9");
        lookupMap.put("&Ntilde", "\u00D1");
        lookupMap.put("&Ntilde;", "\u00D1");
        lookupMap.put("&Nu;", "\u039D");
        lookupMap.put("&OElig;", "\u0152");
        lookupMap.put("&Oacute", "\u00D3");
        lookupMap.put("&Oacute;", "\u00D3");
        lookupMap.put("&Ocirc", "\u00D4");
        lookupMap.put("&Ocirc;", "\u00D4");
        lookupMap.put("&Ocy;", "\u041E");
        lookupMap.put("&Odblac;", "\u0150");
        lookupMap.put("&Ofr;", "\uD835\uDD12");
        lookupMap.put("&Ograve", "\u00D2");
        lookupMap.put("&Ograve;", "\u00D2");
        lookupMap.put("&Omacr;", "\u014C");
        lookupMap.put("&Omega;", "\u03A9");
        lookupMap.put("&Omicron;", "\u039F");
        lookupMap.put("&Oopf;", "\uD835\uDD46");
        lookupMap.put("&OpenCurlyDoubleQuote;", "\u201C");
        lookupMap.put("&OpenCurlyQuote;", "\u2018");
        lookupMap.put("&Or;", "\u2A54");
        lookupMap.put("&Oscr;", "\uD835\uDCAA");
        lookupMap.put("&Oslash", "\u00D8");
        lookupMap.put("&Oslash;", "\u00D8");
        lookupMap.put("&Otilde", "\u00D5");
        lookupMap.put("&Otilde;", "\u00D5");
        lookupMap.put("&Otimes;", "\u2A37");
        lookupMap.put("&Ouml", "\u00D6");
        lookupMap.put("&Ouml;", "\u00D6");
        lookupMap.put("&OverBar;", "\u203E");
        lookupMap.put("&OverBrace;", "\u23DE");
        lookupMap.put("&OverBracket;", "\u23B4");
        lookupMap.put("&OverParenthesis;", "\u23DC");
        lookupMap.put("&PartialD;", "\u2202");
        lookupMap.put("&Pcy;", "\u041F");
        lookupMap.put("&Pfr;", "\uD835\uDD13");
        lookupMap.put("&Phi;", "\u03A6");
        lookupMap.put("&Pi;", "\u03A0");
        lookupMap.put("&PlusMinus;", "\u00B1");
        lookupMap.put("&Poincareplane;", "\u210C");
        lookupMap.put("&Popf;", "\u2119");
        lookupMap.put("&Pr;", "\u2ABB");
        lookupMap.put("&Precedes;", "\u227A");
        lookupMap.put("&PrecedesEqual;", "\u2AAF");
        lookupMap.put("&PrecedesSlantEqual;", "\u227C");
        lookupMap.put("&PrecedesTilde;", "\u227E");
        lookupMap.put("&Prime;", "\u2033");
        lookupMap.put("&Product;", "\u220F");
        lookupMap.put("&Proportion;", "\u2237");
        lookupMap.put("&Proportional;", "\u221D");
        lookupMap.put("&Pscr;", "\uD835\uDCAB");
        lookupMap.put("&Psi;", "\u03A8");
        lookupMap.put("&QUOT", "\"");
        lookupMap.put("&QUOT;", "\"");
        lookupMap.put("&Qfr;", "\uD835\uDD14");
        lookupMap.put("&Qopf;", "\u211A");
        lookupMap.put("&Qscr;", "\uD835\uDCAC");
        lookupMap.put("&RBarr;", "\u2910");
        lookupMap.put("&REG", "\u00AE");
        lookupMap.put("&REG;", "\u00AE");
        lookupMap.put("&Racute;", "\u0154");
        lookupMap.put("&Rang;", "\u27EB");
        lookupMap.put("&Rarr;", "\u21A0");
        lookupMap.put("&Rarrtl;", "\u2916");
        lookupMap.put("&Rcaron;", "\u0158");
        lookupMap.put("&Rcedil;", "\u0156");
        lookupMap.put("&Rcy;", "\u0420");
        lookupMap.put("&Re;", "\u211C");
        lookupMap.put("&ReverseElement;", "\u220B");
        lookupMap.put("&ReverseEquilibrium;", "\u21CB");
        lookupMap.put("&ReverseUpEquilibrium;", "\u296F");
        lookupMap.put("&Rfr;", "\u211C");
        lookupMap.put("&Rho;", "\u03A1");
        lookupMap.put("&RightAngleBracket;", "\u27E9");
        lookupMap.put("&RightArrow;", "\u2192");
        lookupMap.put("&RightArrowBar;", "\u21E5");
        lookupMap.put("&RightArrowLeftArrow;", "\u21C4");
        lookupMap.put("&RightCeiling;", "\u2309");
        lookupMap.put("&RightDoubleBracket;", "\u27E7");
        lookupMap.put("&RightDownTeeVector;", "\u295D");
        lookupMap.put("&RightDownVector;", "\u21C2");
        lookupMap.put("&RightDownVectorBar;", "\u2955");
        lookupMap.put("&RightFloor;", "\u230B");
        lookupMap.put("&RightTee;", "\u22A2");
        lookupMap.put("&RightTeeArrow;", "\u21A6");
        lookupMap.put("&RightTeeVector;", "\u295B");
        lookupMap.put("&RightTriangle;", "\u22B3");
        lookupMap.put("&RightTriangleBar;", "\u29D0");
        lookupMap.put("&RightTriangleEqual;", "\u22B5");
        lookupMap.put("&RightUpDownVector;", "\u294F");
        lookupMap.put("&RightUpTeeVector;", "\u295C");
        lookupMap.put("&RightUpVector;", "\u21BE");
        lookupMap.put("&RightUpVectorBar;", "\u2954");
        lookupMap.put("&RightVector;", "\u21C0");
        lookupMap.put("&RightVectorBar;", "\u2953");
        lookupMap.put("&Rightarrow;", "\u21D2");
        lookupMap.put("&Ropf;", "\u211D");
        lookupMap.put("&RoundImplies;", "\u2970");
        lookupMap.put("&Rrightarrow;", "\u21DB");
        lookupMap.put("&Rscr;", "\u211B");
        lookupMap.put("&Rsh;", "\u21B1");
        lookupMap.put("&RuleDelayed;", "\u29F4");
        lookupMap.put("&SHCHcy;", "\u0429");
        lookupMap.put("&SHcy;", "\u0428");
        lookupMap.put("&SOFTcy;", "\u042C");
        lookupMap.put("&Sacute;", "\u015A");
        lookupMap.put("&Sc;", "\u2ABC");
        lookupMap.put("&Scaron;", "\u0160");
        lookupMap.put("&Scedil;", "\u015E");
        lookupMap.put("&Scirc;", "\u015C");
        lookupMap.put("&Scy;", "\u0421");
        lookupMap.put("&Sfr;", "\uD835\uDD16");
        lookupMap.put("&ShortDownArrow;", "\u2193");
        lookupMap.put("&ShortLeftArrow;", "\u2190");
        lookupMap.put("&ShortRightArrow;", "\u2192");
        lookupMap.put("&ShortUpArrow;", "\u2191");
        lookupMap.put("&Sigma;", "\u03A3");
        lookupMap.put("&SmallCircle;", "\u2218");
        lookupMap.put("&Sopf;", "\uD835\uDD4A");
        lookupMap.put("&Sqrt;", "\u221A");
        lookupMap.put("&Square;", "\u25A1");
        lookupMap.put("&SquareIntersection;", "\u2293");
        lookupMap.put("&SquareSubset;", "\u228F");
        lookupMap.put("&SquareSubsetEqual;", "\u2291");
        lookupMap.put("&SquareSuperset;", "\u2290");
        lookupMap.put("&SquareSupersetEqual;", "\u2292");
        lookupMap.put("&SquareUnion;", "\u2294");
        lookupMap.put("&Sscr;", "\uD835\uDCAE");
        lookupMap.put("&Star;", "\u22C6");
        lookupMap.put("&Sub;", "\u22D0");
        lookupMap.put("&Subset;", "\u22D0");
        lookupMap.put("&SubsetEqual;", "\u2286");
        lookupMap.put("&Succeeds;", "\u227B");
        lookupMap.put("&SucceedsEqual;", "\u2AB0");
        lookupMap.put("&SucceedsSlantEqual;", "\u227D");
        lookupMap.put("&SucceedsTilde;", "\u227F");
        lookupMap.put("&SuchThat;", "\u220B");
        lookupMap.put("&Sum;", "\u2211");
        lookupMap.put("&Sup;", "\u22D1");
        lookupMap.put("&Superset;", "\u2283");
        lookupMap.put("&SupersetEqual;", "\u2287");
        lookupMap.put("&Supset;", "\u22D1");
        lookupMap.put("&THORN", "\u00DE");
        lookupMap.put("&THORN;", "\u00DE");
        lookupMap.put("&TRADE;", "\u2122");
        lookupMap.put("&TSHcy;", "\u040B");
        lookupMap.put("&TScy;", "\u0426");
        lookupMap.put("&Tab;", "\u0009");
        lookupMap.put("&Tau;", "\u03A4");
        lookupMap.put("&Tcaron;", "\u0164");
        lookupMap.put("&Tcedil;", "\u0162");
        lookupMap.put("&Tcy;", "\u0422");
        lookupMap.put("&Tfr;", "\uD835\uDD17");
        lookupMap.put("&Therefore;", "\u2234");
        lookupMap.put("&Theta;", "\u0398");
        lookupMap.put("&ThickSpace;", "\u205F\u200A");
        lookupMap.put("&ThinSpace;", "\u2009");
        lookupMap.put("&Tilde;", "\u223C");
        lookupMap.put("&TildeEqual;", "\u2243");
        lookupMap.put("&TildeFullEqual;", "\u2245");
        lookupMap.put("&TildeTilde;", "\u2248");
        lookupMap.put("&Topf;", "\uD835\uDD4B");
        lookupMap.put("&TripleDot;", "\u20DB");
        lookupMap.put("&Tscr;", "\uD835\uDCAF");
        lookupMap.put("&Tstrok;", "\u0166");
        lookupMap.put("&Uacute", "\u00DA");
        lookupMap.put("&Uacute;", "\u00DA");
        lookupMap.put("&Uarr;", "\u219F");
        lookupMap.put("&Uarrocir;", "\u2949");
        lookupMap.put("&Ubrcy;", "\u040E");
        lookupMap.put("&Ubreve;", "\u016C");
        lookupMap.put("&Ucirc", "\u00DB");
        lookupMap.put("&Ucirc;", "\u00DB");
        lookupMap.put("&Ucy;", "\u0423");
        lookupMap.put("&Udblac;", "\u0170");
        lookupMap.put("&Ufr;", "\uD835\uDD18");
        lookupMap.put("&Ugrave", "\u00D9");
        lookupMap.put("&Ugrave;", "\u00D9");
        lookupMap.put("&Umacr;", "\u016A");
        lookupMap.put("&UnderBar;", "\u005F");
        lookupMap.put("&UnderBrace;", "\u23DF");
        lookupMap.put("&UnderBracket;", "\u23B5");
        lookupMap.put("&UnderParenthesis;", "\u23DD");
        lookupMap.put("&Union;", "\u22C3");
        lookupMap.put("&UnionPlus;", "\u228E");
        lookupMap.put("&Uogon;", "\u0172");
        lookupMap.put("&Uopf;", "\uD835\uDD4C");
        lookupMap.put("&UpArrow;", "\u2191");
        lookupMap.put("&UpArrowBar;", "\u2912");
        lookupMap.put("&UpArrowDownArrow;", "\u21C5");
        lookupMap.put("&UpDownArrow;", "\u2195");
        lookupMap.put("&UpEquilibrium;", "\u296E");
        lookupMap.put("&UpTee;", "\u22A5");
        lookupMap.put("&UpTeeArrow;", "\u21A5");
        lookupMap.put("&Uparrow;", "\u21D1");
        lookupMap.put("&Updownarrow;", "\u21D5");
        lookupMap.put("&UpperLeftArrow;", "\u2196");
        lookupMap.put("&UpperRightArrow;", "\u2197");
        lookupMap.put("&Upsi;", "\u03D2");
        lookupMap.put("&Upsilon;", "\u03A5");
        lookupMap.put("&Uring;", "\u016E");
        lookupMap.put("&Uscr;", "\uD835\uDCB0");
        lookupMap.put("&Utilde;", "\u0168");
        lookupMap.put("&Uuml", "\u00DC");
        lookupMap.put("&Uuml;", "\u00DC");
        lookupMap.put("&VDash;", "\u22AB");
        lookupMap.put("&Vbar;", "\u2AEB");
        lookupMap.put("&Vcy;", "\u0412");
        lookupMap.put("&Vdash;", "\u22A9");
        lookupMap.put("&Vdashl;", "\u2AE6");
        lookupMap.put("&Vee;", "\u22C1");
        lookupMap.put("&Verbar;", "\u2016");
        lookupMap.put("&Vert;", "\u2016");
        lookupMap.put("&VerticalBar;", "\u2223");
        lookupMap.put("&VerticalLine;", "\u007C");
        lookupMap.put("&VerticalSeparator;", "\u2758");
        lookupMap.put("&VerticalTilde;", "\u2240");
        lookupMap.put("&VeryThinSpace;", "\u200A");
        lookupMap.put("&Vfr;", "\uD835\uDD19");
        lookupMap.put("&Vopf;", "\uD835\uDD4D");
        lookupMap.put("&Vscr;", "\uD835\uDCB1");
        lookupMap.put("&Vvdash;", "\u22AA");
        lookupMap.put("&Wcirc;", "\u0174");
        lookupMap.put("&Wedge;", "\u22C0");
        lookupMap.put("&Wfr;", "\uD835\uDD1A");
        lookupMap.put("&Wopf;", "\uD835\uDD4E");
        lookupMap.put("&Wscr;", "\uD835\uDCB2");
        lookupMap.put("&Xfr;", "\uD835\uDD1B");
        lookupMap.put("&Xi;", "\u039E");
        lookupMap.put("&Xopf;", "\uD835\uDD4F");
        lookupMap.put("&Xscr;", "\uD835\uDCB3");
        lookupMap.put("&YAcy;", "\u042F");
        lookupMap.put("&YIcy;", "\u0407");
        lookupMap.put("&YUcy;", "\u042E");
        lookupMap.put("&Yacute", "\u00DD");
        lookupMap.put("&Yacute;", "\u00DD");
        lookupMap.put("&Ycirc;", "\u0176");
        lookupMap.put("&Ycy;", "\u042B");
        lookupMap.put("&Yfr;", "\uD835\uDD1C");
        lookupMap.put("&Yopf;", "\uD835\uDD50");
        lookupMap.put("&Yscr;", "\uD835\uDCB4");
        lookupMap.put("&Yuml;", "\u0178");
        lookupMap.put("&ZHcy;", "\u0416");
        lookupMap.put("&Zacute;", "\u0179");
        lookupMap.put("&Zcaron;", "\u017D");
        lookupMap.put("&Zcy;", "\u0417");
        lookupMap.put("&Zdot;", "\u017B");
        lookupMap.put("&ZeroWidthSpace;", "\u200B");
        lookupMap.put("&Zeta;", "\u0396");
        lookupMap.put("&Zfr;", "\u2128");
        lookupMap.put("&Zopf;", "\u2124");
        lookupMap.put("&Zscr;", "\uD835\uDCB5");
        lookupMap.put("&aacute", "\u00E1");
        lookupMap.put("&aacute;", "\u00E1");
        lookupMap.put("&abreve;", "\u0103");
        lookupMap.put("&ac;", "\u223E");
        lookupMap.put("&acE;", "\u223E\u0333");
        lookupMap.put("&acd;", "\u223F");
        lookupMap.put("&acirc", "\u00E2");
        lookupMap.put("&acirc;", "\u00E2");
        lookupMap.put("&acute", "\u00B4");
        lookupMap.put("&acute;", "\u00B4");
        lookupMap.put("&acy;", "\u0430");
        lookupMap.put("&aelig", "\u00E6");
        lookupMap.put("&aelig;", "\u00E6");
        lookupMap.put("&af;", "\u2061");
        lookupMap.put("&afr;", "\uD835\uDD1E");
        lookupMap.put("&agrave", "\u00E0");
        lookupMap.put("&agrave;", "\u00E0");
        lookupMap.put("&alefsym;", "\u2135");
        lookupMap.put("&aleph;", "\u2135");
        lookupMap.put("&alpha;", "\u03B1");
        lookupMap.put("&amacr;", "\u0101");
        lookupMap.put("&amalg;", "\u2A3F");
        lookupMap.put("&amp", "\u0026");
        lookupMap.put("&amp;", "\u0026");
        lookupMap.put("&and;", "\u2227");
        lookupMap.put("&andand;", "\u2A55");
        lookupMap.put("&andd;", "\u2A5C");
        lookupMap.put("&andslope;", "\u2A58");
        lookupMap.put("&andv;", "\u2A5A");
        lookupMap.put("&ang;", "\u2220");
        lookupMap.put("&ange;", "\u29A4");
        lookupMap.put("&angle;", "\u2220");
        lookupMap.put("&angmsd;", "\u2221");
        lookupMap.put("&angmsdaa;", "\u29A8");
        lookupMap.put("&angmsdab;", "\u29A9");
        lookupMap.put("&angmsdac;", "\u29AA");
        lookupMap.put("&angmsdad;", "\u29AB");
        lookupMap.put("&angmsdae;", "\u29AC");
        lookupMap.put("&angmsdaf;", "\u29AD");
        lookupMap.put("&angmsdag;", "\u29AE");
        lookupMap.put("&angmsdah;", "\u29AF");
        lookupMap.put("&angrt;", "\u221F");
        lookupMap.put("&angrtvb;", "\u22BE");
        lookupMap.put("&angrtvbd;", "\u299D");
        lookupMap.put("&angsph;", "\u2222");
        lookupMap.put("&angst;", "\u00C5");
        lookupMap.put("&angzarr;", "\u237C");
        lookupMap.put("&aogon;", "\u0105");
        lookupMap.put("&aopf;", "\uD835\uDD52");
        lookupMap.put("&ap;", "\u2248");
        lookupMap.put("&apE;", "\u2A70");
        lookupMap.put("&apacir;", "\u2A6F");
        lookupMap.put("&ape;", "\u224A");
        lookupMap.put("&apid;", "\u224B");
        lookupMap.put("&apos;", "\u0027");
        lookupMap.put("&approx;", "\u2248");
        lookupMap.put("&approxeq;", "\u224A");
        lookupMap.put("&aring", "\u00E5");
        lookupMap.put("&aring;", "\u00E5");
        lookupMap.put("&ascr;", "\uD835\uDCB6");
        lookupMap.put("&ast;", "\u002A");
        lookupMap.put("&asymp;", "\u2248");
        lookupMap.put("&asympeq;", "\u224D");
        lookupMap.put("&atilde", "\u00E3");
        lookupMap.put("&atilde;", "\u00E3");
        lookupMap.put("&auml", "\u00E4");
        lookupMap.put("&auml;", "\u00E4");
        lookupMap.put("&awconint;", "\u2233");
        lookupMap.put("&awint;", "\u2A11");
        lookupMap.put("&bNot;", "\u2AED");
        lookupMap.put("&backcong;", "\u224C");
        lookupMap.put("&backepsilon;", "\u03F6");
        lookupMap.put("&backprime;", "\u2035");
        lookupMap.put("&backsim;", "\u223D");
        lookupMap.put("&backsimeq;", "\u22CD");
        lookupMap.put("&barvee;", "\u22BD");
        lookupMap.put("&barwed;", "\u2305");
        lookupMap.put("&barwedge;", "\u2305");
        lookupMap.put("&bbrk;", "\u23B5");
        lookupMap.put("&bbrktbrk;", "\u23B6");
        lookupMap.put("&bcong;", "\u224C");
        lookupMap.put("&bcy;", "\u0431");
        lookupMap.put("&bdquo;", "\u201E");
        lookupMap.put("&becaus;", "\u2235");
        lookupMap.put("&because;", "\u2235");
        lookupMap.put("&bemptyv;", "\u29B0");
        lookupMap.put("&bepsi;", "\u03F6");
        lookupMap.put("&bernou;", "\u212C");
        lookupMap.put("&beta;", "\u03B2");
        lookupMap.put("&beth;", "\u2136");
        lookupMap.put("&between;", "\u226C");
        lookupMap.put("&bfr;", "\uD835\uDD1F");
        lookupMap.put("&bigcap;", "\u22C2");
        lookupMap.put("&bigcirc;", "\u25EF");
        lookupMap.put("&bigcup;", "\u22C3");
        lookupMap.put("&bigodot;", "\u2A00");
        lookupMap.put("&bigoplus;", "\u2A01");
        lookupMap.put("&bigotimes;", "\u2A02");
        lookupMap.put("&bigsqcup;", "\u2A06");
        lookupMap.put("&bigstar;", "\u2605");
        lookupMap.put("&bigtriangledown;", "\u25BD");
        lookupMap.put("&bigtriangleup;", "\u25B3");
        lookupMap.put("&biguplus;", "\u2A04");
        lookupMap.put("&bigvee;", "\u22C1");
        lookupMap.put("&bigwedge;", "\u22C0");
        lookupMap.put("&bkarow;", "\u290D");
        lookupMap.put("&blacklozenge;", "\u29EB");
        lookupMap.put("&blacksquare;", "\u25AA");
        lookupMap.put("&blacktriangle;", "\u25B4");
        lookupMap.put("&blacktriangledown;", "\u25BE");
        lookupMap.put("&blacktriangleleft;", "\u25C2");
        lookupMap.put("&blacktriangleright;", "\u25B8");
        lookupMap.put("&blank;", "\u2423");
        lookupMap.put("&blk12;", "\u2592");
        lookupMap.put("&blk14;", "\u2591");
        lookupMap.put("&blk34;", "\u2593");
        lookupMap.put("&block;", "\u2588");
        lookupMap.put("&bne;", "\u003D\u20E5");
        lookupMap.put("&bnequiv;", "\u2261\u20E5");
        lookupMap.put("&bnot;", "\u2310");
        lookupMap.put("&bopf;", "\uD835\uDD53");
        lookupMap.put("&bot;", "\u22A5");
        lookupMap.put("&bottom;", "\u22A5");
        lookupMap.put("&bowtie;", "\u22C8");
        lookupMap.put("&boxDL;", "\u2557");
        lookupMap.put("&boxDR;", "\u2554");
        lookupMap.put("&boxDl;", "\u2556");
        lookupMap.put("&boxDr;", "\u2553");
        lookupMap.put("&boxH;", "\u2550");
        lookupMap.put("&boxHD;", "\u2566");
        lookupMap.put("&boxHU;", "\u2569");
        lookupMap.put("&boxHd;", "\u2564");
        lookupMap.put("&boxHu;", "\u2567");
        lookupMap.put("&boxUL;", "\u255D");
        lookupMap.put("&boxUR;", "\u255A");
        lookupMap.put("&boxUl;", "\u255C");
        lookupMap.put("&boxUr;", "\u2559");
        lookupMap.put("&boxV;", "\u2551");
        lookupMap.put("&boxVH;", "\u256C");
        lookupMap.put("&boxVL;", "\u2563");
        lookupMap.put("&boxVR;", "\u2560");
        lookupMap.put("&boxVh;", "\u256B");
        lookupMap.put("&boxVl;", "\u2562");
        lookupMap.put("&boxVr;", "\u255F");
        lookupMap.put("&boxbox;", "\u29C9");
        lookupMap.put("&boxdL;", "\u2555");
        lookupMap.put("&boxdR;", "\u2552");
        lookupMap.put("&boxdl;", "\u2510");
        lookupMap.put("&boxdr;", "\u250C");
        lookupMap.put("&boxh;", "\u2500");
        lookupMap.put("&boxhD;", "\u2565");
        lookupMap.put("&boxhU;", "\u2568");
        lookupMap.put("&boxhd;", "\u252C");
        lookupMap.put("&boxhu;", "\u2534");
        lookupMap.put("&boxminus;", "\u229F");
        lookupMap.put("&boxplus;", "\u229E");
        lookupMap.put("&boxtimes;", "\u22A0");
        lookupMap.put("&boxuL;", "\u255B");
        lookupMap.put("&boxuR;", "\u2558");
        lookupMap.put("&boxul;", "\u2518");
        lookupMap.put("&boxur;", "\u2514");
        lookupMap.put("&boxv;", "\u2502");
        lookupMap.put("&boxvH;", "\u256A");
        lookupMap.put("&boxvL;", "\u2561");
        lookupMap.put("&boxvR;", "\u255E");
        lookupMap.put("&boxvh;", "\u253C");
        lookupMap.put("&boxvl;", "\u2524");
        lookupMap.put("&boxvr;", "\u251C");
        lookupMap.put("&bprime;", "\u2035");
        lookupMap.put("&breve;", "\u02D8");
        lookupMap.put("&brvbar", "\u00A6");
        lookupMap.put("&brvbar;", "\u00A6");
        lookupMap.put("&bscr;", "\uD835\uDCB7");
        lookupMap.put("&bsemi;", "\u204F");
        lookupMap.put("&bsim;", "\u223D");
        lookupMap.put("&bsime;", "\u22CD");
        lookupMap.put("&bsol;", "\\");
        lookupMap.put("&bsolb;", "\u29C5");
        lookupMap.put("&bsolhsub;", "\u27C8");
        lookupMap.put("&bull;", "\u2022");
        lookupMap.put("&bullet;", "\u2022");
        lookupMap.put("&bump;", "\u224E");
        lookupMap.put("&bumpE;", "\u2AAE");
        lookupMap.put("&bumpe;", "\u224F");
        lookupMap.put("&bumpeq;", "\u224F");
        lookupMap.put("&cacute;", "\u0107");
        lookupMap.put("&cap;", "\u2229");
        lookupMap.put("&capand;", "\u2A44");
        lookupMap.put("&capbrcup;", "\u2A49");
        lookupMap.put("&capcap;", "\u2A4B");
        lookupMap.put("&capcup;", "\u2A47");
        lookupMap.put("&capdot;", "\u2A40");
        lookupMap.put("&caps;", "\u2229\uFE00");
        lookupMap.put("&caret;", "\u2041");
        lookupMap.put("&caron;", "\u02C7");
        lookupMap.put("&ccaps;", "\u2A4D");
        lookupMap.put("&ccaron;", "\u010D");
        lookupMap.put("&ccedil", "\u00E7");
        lookupMap.put("&ccedil;", "\u00E7");
        lookupMap.put("&ccirc;", "\u0109");
        lookupMap.put("&ccups;", "\u2A4C");
        lookupMap.put("&ccupssm;", "\u2A50");
        lookupMap.put("&cdot;", "\u010B");
        lookupMap.put("&cedil", "\u00B8");
        lookupMap.put("&cedil;", "\u00B8");
        lookupMap.put("&cemptyv;", "\u29B2");
        lookupMap.put("&cent", "\u00A2");
        lookupMap.put("&cent;", "\u00A2");
        lookupMap.put("&centerdot;", "\u00B7");
        lookupMap.put("&cfr;", "\uD835\uDD20");
        lookupMap.put("&chcy;", "\u0447");
        lookupMap.put("&check;", "\u2713");
        lookupMap.put("&checkmark;", "\u2713");
        lookupMap.put("&chi;", "\u03C7");
        lookupMap.put("&cir;", "\u25CB");
        lookupMap.put("&cirE;", "\u29C3");
        lookupMap.put("&circ;", "\u02C6");
        lookupMap.put("&circeq;", "\u2257");
        lookupMap.put("&circlearrowleft;", "\u21BA");
        lookupMap.put("&circlearrowright;", "\u21BB");
        lookupMap.put("&circledR;", "\u00AE");
        lookupMap.put("&circledS;", "\u24C8");
        lookupMap.put("&circledast;", "\u229B");
        lookupMap.put("&circledcirc;", "\u229A");
        lookupMap.put("&circleddash;", "\u229D");
        lookupMap.put("&cire;", "\u2257");
        lookupMap.put("&cirfnint;", "\u2A10");
        lookupMap.put("&cirmid;", "\u2AEF");
        lookupMap.put("&cirscir;", "\u29C2");
        lookupMap.put("&clubs;", "\u2663");
        lookupMap.put("&clubsuit;", "\u2663");
        lookupMap.put("&colon;", "\u003A");
        lookupMap.put("&colone;", "\u2254");
        lookupMap.put("&coloneq;", "\u2254");
        lookupMap.put("&comma;", "\u002C");
        lookupMap.put("&commat;", "\u0040");
        lookupMap.put("&comp;", "\u2201");
        lookupMap.put("&compfn;", "\u2218");
        lookupMap.put("&complement;", "\u2201");
        lookupMap.put("&complexes;", "\u2102");
        lookupMap.put("&cong;", "\u2245");
        lookupMap.put("&congdot;", "\u2A6D");
        lookupMap.put("&conint;", "\u222E");
        lookupMap.put("&copf;", "\uD835\uDD54");
        lookupMap.put("&coprod;", "\u2210");
        lookupMap.put("&copy", "\u00A9");
        lookupMap.put("&copy;", "\u00A9");
        lookupMap.put("&copysr;", "\u2117");
        lookupMap.put("&crarr;", "\u21B5");
        lookupMap.put("&cross;", "\u2717");
        lookupMap.put("&cscr;", "\uD835\uDCB8");
        lookupMap.put("&csub;", "\u2ACF");
        lookupMap.put("&csube;", "\u2AD1");
        lookupMap.put("&csup;", "\u2AD0");
        lookupMap.put("&csupe;", "\u2AD2");
        lookupMap.put("&ctdot;", "\u22EF");
        lookupMap.put("&cudarrl;", "\u2938");
        lookupMap.put("&cudarrr;", "\u2935");
        lookupMap.put("&cuepr;", "\u22DE");
        lookupMap.put("&cuesc;", "\u22DF");
        lookupMap.put("&cularr;", "\u21B6");
        lookupMap.put("&cularrp;", "\u293D");
        lookupMap.put("&cup;", "\u222A");
        lookupMap.put("&cupbrcap;", "\u2A48");
        lookupMap.put("&cupcap;", "\u2A46");
        lookupMap.put("&cupcup;", "\u2A4A");
        lookupMap.put("&cupdot;", "\u228D");
        lookupMap.put("&cupor;", "\u2A45");
        lookupMap.put("&cups;", "\u222A\uFE00");
        lookupMap.put("&curarr;", "\u21B7");
        lookupMap.put("&curarrm;", "\u293C");
        lookupMap.put("&curlyeqprec;", "\u22DE");
        lookupMap.put("&curlyeqsucc;", "\u22DF");
        lookupMap.put("&curlyvee;", "\u22CE");
        lookupMap.put("&curlywedge;", "\u22CF");
        lookupMap.put("&curren", "\u00A4");
        lookupMap.put("&curren;", "\u00A4");
        lookupMap.put("&curvearrowleft;", "\u21B6");
        lookupMap.put("&curvearrowright;", "\u21B7");
        lookupMap.put("&cuvee;", "\u22CE");
        lookupMap.put("&cuwed;", "\u22CF");
        lookupMap.put("&cwconint;", "\u2232");
        lookupMap.put("&cwint;", "\u2231");
        lookupMap.put("&cylcty;", "\u232D");
        lookupMap.put("&dArr;", "\u21D3");
        lookupMap.put("&dHar;", "\u2965");
        lookupMap.put("&dagger;", "\u2020");
        lookupMap.put("&daleth;", "\u2138");
        lookupMap.put("&darr;", "\u2193");
        lookupMap.put("&dash;", "\u2010");
        lookupMap.put("&dashv;", "\u22A3");
        lookupMap.put("&dbkarow;", "\u290F");
        lookupMap.put("&dblac;", "\u02DD");
        lookupMap.put("&dcaron;", "\u010F");
        lookupMap.put("&dcy;", "\u0434");
        lookupMap.put("&dd;", "\u2146");
        lookupMap.put("&ddagger;", "\u2021");
        lookupMap.put("&ddarr;", "\u21CA");
        lookupMap.put("&ddotseq;", "\u2A77");
        lookupMap.put("&deg", "\u00B0");
        lookupMap.put("&deg;", "\u00B0");
        lookupMap.put("&delta;", "\u03B4");
        lookupMap.put("&demptyv;", "\u29B1");
        lookupMap.put("&dfisht;", "\u297F");
        lookupMap.put("&dfr;", "\uD835\uDD21");
        lookupMap.put("&dharl;", "\u21C3");
        lookupMap.put("&dharr;", "\u21C2");
        lookupMap.put("&diam;", "\u22C4");
        lookupMap.put("&diamond;", "\u22C4");
        lookupMap.put("&diamondsuit;", "\u2666");
        lookupMap.put("&diams;", "\u2666");
        lookupMap.put("&die;", "\u00A8");
        lookupMap.put("&digamma;", "\u03DD");
        lookupMap.put("&disin;", "\u22F2");
        lookupMap.put("&div;", "\u00F7");
        lookupMap.put("&divide", "\u00F7");
        lookupMap.put("&divide;", "\u00F7");
        lookupMap.put("&divideontimes;", "\u22C7");
        lookupMap.put("&divonx;", "\u22C7");
        lookupMap.put("&djcy;", "\u0452");
        lookupMap.put("&dlcorn;", "\u231E");
        lookupMap.put("&dlcrop;", "\u230D");
        lookupMap.put("&dollar;", "\u0024");
        lookupMap.put("&dopf;", "\uD835\uDD55");
        lookupMap.put("&dot;", "\u02D9");
        lookupMap.put("&doteq;", "\u2250");
        lookupMap.put("&doteqdot;", "\u2251");
        lookupMap.put("&dotminus;", "\u2238");
        lookupMap.put("&dotplus;", "\u2214");
        lookupMap.put("&dotsquare;", "\u22A1");
        lookupMap.put("&doublebarwedge;", "\u2306");
        lookupMap.put("&downarrow;", "\u2193");
        lookupMap.put("&downdownarrows;", "\u21CA");
        lookupMap.put("&downharpoonleft;", "\u21C3");
        lookupMap.put("&downharpoonright;", "\u21C2");
        lookupMap.put("&drbkarow;", "\u2910");
        lookupMap.put("&drcorn;", "\u231F");
        lookupMap.put("&drcrop;", "\u230C");
        lookupMap.put("&dscr;", "\uD835\uDCB9");
        lookupMap.put("&dscy;", "\u0455");
        lookupMap.put("&dsol;", "\u29F6");
        lookupMap.put("&dstrok;", "\u0111");
        lookupMap.put("&dtdot;", "\u22F1");
        lookupMap.put("&dtri;", "\u25BF");
        lookupMap.put("&dtrif;", "\u25BE");
        lookupMap.put("&duarr;", "\u21F5");
        lookupMap.put("&duhar;", "\u296F");
        lookupMap.put("&dwangle;", "\u29A6");
        lookupMap.put("&dzcy;", "\u045F");
        lookupMap.put("&dzigrarr;", "\u27FF");
        lookupMap.put("&eDDot;", "\u2A77");
        lookupMap.put("&eDot;", "\u2251");
        lookupMap.put("&eacute", "\u00E9");
        lookupMap.put("&eacute;", "\u00E9");
        lookupMap.put("&easter;", "\u2A6E");
        lookupMap.put("&ecaron;", "\u011B");
        lookupMap.put("&ecir;", "\u2256");
        lookupMap.put("&ecirc", "\u00EA");
        lookupMap.put("&ecirc;", "\u00EA");
        lookupMap.put("&ecolon;", "\u2255");
        lookupMap.put("&ecy;", "\u044D");
        lookupMap.put("&edot;", "\u0117");
        lookupMap.put("&ee;", "\u2147");
        lookupMap.put("&efDot;", "\u2252");
        lookupMap.put("&efr;", "\uD835\uDD22");
        lookupMap.put("&eg;", "\u2A9A");
        lookupMap.put("&egrave", "\u00E8");
        lookupMap.put("&egrave;", "\u00E8");
        lookupMap.put("&egs;", "\u2A96");
        lookupMap.put("&egsdot;", "\u2A98");
        lookupMap.put("&el;", "\u2A99");
        lookupMap.put("&elinters;", "\u23E7");
        lookupMap.put("&ell;", "\u2113");
        lookupMap.put("&els;", "\u2A95");
        lookupMap.put("&elsdot;", "\u2A97");
        lookupMap.put("&emacr;", "\u0113");
        lookupMap.put("&empty;", "\u2205");
        lookupMap.put("&emptyset;", "\u2205");
        lookupMap.put("&emptyv;", "\u2205");
        lookupMap.put("&emsp13;", "\u2004");
        lookupMap.put("&emsp14;", "\u2005");
        lookupMap.put("&emsp;", "\u2003");
        lookupMap.put("&eng;", "\u014B");
        lookupMap.put("&ensp;", "\u2002");
        lookupMap.put("&eogon;", "\u0119");
        lookupMap.put("&eopf;", "\uD835\uDD56");
        lookupMap.put("&epar;", "\u22D5");
        lookupMap.put("&eparsl;", "\u29E3");
        lookupMap.put("&eplus;", "\u2A71");
        lookupMap.put("&epsi;", "\u03B5");
        lookupMap.put("&epsilon;", "\u03B5");
        lookupMap.put("&epsiv;", "\u03F5");
        lookupMap.put("&eqcirc;", "\u2256");
        lookupMap.put("&eqcolon;", "\u2255");
        lookupMap.put("&eqsim;", "\u2242");
        lookupMap.put("&eqslantgtr;", "\u2A96");
        lookupMap.put("&eqslantless;", "\u2A95");
        lookupMap.put("&equals;", "\u003D");
        lookupMap.put("&equest;", "\u225F");
        lookupMap.put("&equiv;", "\u2261");
        lookupMap.put("&equivDD;", "\u2A78");
        lookupMap.put("&eqvparsl;", "\u29E5");
        lookupMap.put("&erDot;", "\u2253");
        lookupMap.put("&erarr;", "\u2971");
        lookupMap.put("&escr;", "\u212F");
        lookupMap.put("&esdot;", "\u2250");
        lookupMap.put("&esim;", "\u2242");
        lookupMap.put("&eta;", "\u03B7");
        lookupMap.put("&eth", "\u00F0");
        lookupMap.put("&eth;", "\u00F0");
        lookupMap.put("&euml", "\u00EB");
        lookupMap.put("&euml;", "\u00EB");
        lookupMap.put("&euro;", "\u20AC");
        lookupMap.put("&excl;", "\u0021");
        lookupMap.put("&exist;", "\u2203");
        lookupMap.put("&expectation;", "\u2130");
        lookupMap.put("&exponentiale;", "\u2147");
        lookupMap.put("&fallingdotseq;", "\u2252");
        lookupMap.put("&fcy;", "\u0444");
        lookupMap.put("&female;", "\u2640");
        lookupMap.put("&ffilig;", "\uFB03");
        lookupMap.put("&fflig;", "\uFB00");
        lookupMap.put("&ffllig;", "\uFB04");
        lookupMap.put("&ffr;", "\uD835\uDD23");
        lookupMap.put("&filig;", "\uFB01");
        lookupMap.put("&fjlig;", "\u0066\u006A");
        lookupMap.put("&flat;", "\u266D");
        lookupMap.put("&fllig;", "\uFB02");
        lookupMap.put("&fltns;", "\u25B1");
        lookupMap.put("&fnof;", "\u0192");
        lookupMap.put("&fopf;", "\uD835\uDD57");
        lookupMap.put("&forall;", "\u2200");
        lookupMap.put("&fork;", "\u22D4");
        lookupMap.put("&forkv;", "\u2AD9");
        lookupMap.put("&fpartint;", "\u2A0D");
        lookupMap.put("&frac12", "\u00BD");
        lookupMap.put("&frac12;", "\u00BD");
        lookupMap.put("&frac13;", "\u2153");
        lookupMap.put("&frac14", "\u00BC");
        lookupMap.put("&frac14;", "\u00BC");
        lookupMap.put("&frac15;", "\u2155");
        lookupMap.put("&frac16;", "\u2159");
        lookupMap.put("&frac18;", "\u215B");
        lookupMap.put("&frac23;", "\u2154");
        lookupMap.put("&frac25;", "\u2156");
        lookupMap.put("&frac34", "\u00BE");
        lookupMap.put("&frac34;", "\u00BE");
        lookupMap.put("&frac35;", "\u2157");
        lookupMap.put("&frac38;", "\u215C");
        lookupMap.put("&frac45;", "\u2158");
        lookupMap.put("&frac56;", "\u215A");
        lookupMap.put("&frac58;", "\u215D");
        lookupMap.put("&frac78;", "\u215E");
        lookupMap.put("&frasl;", "\u2044");
        lookupMap.put("&frown;", "\u2322");
        lookupMap.put("&fscr;", "\uD835\uDCBB");
        lookupMap.put("&gE;", "\u2267");
        lookupMap.put("&gEl;", "\u2A8C");
        lookupMap.put("&gacute;", "\u01F5");
        lookupMap.put("&gamma;", "\u03B3");
        lookupMap.put("&gammad;", "\u03DD");
        lookupMap.put("&gap;", "\u2A86");
        lookupMap.put("&gbreve;", "\u011F");
        lookupMap.put("&gcirc;", "\u011D");
        lookupMap.put("&gcy;", "\u0433");
        lookupMap.put("&gdot;", "\u0121");
        lookupMap.put("&ge;", "\u2265");
        lookupMap.put("&gel;", "\u22DB");
        lookupMap.put("&geq;", "\u2265");
        lookupMap.put("&geqq;", "\u2267");
        lookupMap.put("&geqslant;", "\u2A7E");
        lookupMap.put("&ges;", "\u2A7E");
        lookupMap.put("&gescc;", "\u2AA9");
        lookupMap.put("&gesdot;", "\u2A80");
        lookupMap.put("&gesdoto;", "\u2A82");
        lookupMap.put("&gesdotol;", "\u2A84");
        lookupMap.put("&gesl;", "\u22DB\uFE00");
        lookupMap.put("&gesles;", "\u2A94");
        lookupMap.put("&gfr;", "\uD835\uDD24");
        lookupMap.put("&gg;", "\u226B");
        lookupMap.put("&ggg;", "\u22D9");
        lookupMap.put("&gimel;", "\u2137");
        lookupMap.put("&gjcy;", "\u0453");
        lookupMap.put("&gl;", "\u2277");
        lookupMap.put("&glE;", "\u2A92");
        lookupMap.put("&gla;", "\u2AA5");
        lookupMap.put("&glj;", "\u2AA4");
        lookupMap.put("&gnE;", "\u2269");
        lookupMap.put("&gnap;", "\u2A8A");
        lookupMap.put("&gnapprox;", "\u2A8A");
        lookupMap.put("&gne;", "\u2A88");
        lookupMap.put("&gneq;", "\u2A88");
        lookupMap.put("&gneqq;", "\u2269");
        lookupMap.put("&gnsim;", "\u22E7");
        lookupMap.put("&gopf;", "\uD835\uDD58");
        lookupMap.put("&grave;", "\u0060");
        lookupMap.put("&gscr;", "\u210A");
        lookupMap.put("&gsim;", "\u2273");
        lookupMap.put("&gsime;", "\u2A8E");
        lookupMap.put("&gsiml;", "\u2A90");
        lookupMap.put("&gt", "\u003E");
        lookupMap.put("&gt;", "\u003E");
        lookupMap.put("&gtcc;", "\u2AA7");
        lookupMap.put("&gtcir;", "\u2A7A");
        lookupMap.put("&gtdot;", "\u22D7");
        lookupMap.put("&gtlPar;", "\u2995");
        lookupMap.put("&gtquest;", "\u2A7C");
        lookupMap.put("&gtrapprox;", "\u2A86");
        lookupMap.put("&gtrarr;", "\u2978");
        lookupMap.put("&gtrdot;", "\u22D7");
        lookupMap.put("&gtreqless;", "\u22DB");
        lookupMap.put("&gtreqqless;", "\u2A8C");
        lookupMap.put("&gtrless;", "\u2277");
        lookupMap.put("&gtrsim;", "\u2273");
        lookupMap.put("&gvertneqq;", "\u2269\uFE00");
        lookupMap.put("&gvnE;", "\u2269\uFE00");
        lookupMap.put("&hArr;", "\u21D4");
        lookupMap.put("&hairsp;", "\u200A");
        lookupMap.put("&half;", "\u00BD");
        lookupMap.put("&hamilt;", "\u210B");
        lookupMap.put("&hardcy;", "\u044A");
        lookupMap.put("&harr;", "\u2194");
        lookupMap.put("&harrcir;", "\u2948");
        lookupMap.put("&harrw;", "\u21AD");
        lookupMap.put("&hbar;", "\u210F");
        lookupMap.put("&hcirc;", "\u0125");
        lookupMap.put("&hearts;", "\u2665");
        lookupMap.put("&heartsuit;", "\u2665");
        lookupMap.put("&hellip;", "\u2026");
        lookupMap.put("&hercon;", "\u22B9");
        lookupMap.put("&hfr;", "\uD835\uDD25");
        lookupMap.put("&hksearow;", "\u2925");
        lookupMap.put("&hkswarow;", "\u2926");
        lookupMap.put("&hoarr;", "\u21FF");
        lookupMap.put("&homtht;", "\u223B");
        lookupMap.put("&hookleftarrow;", "\u21A9");
        lookupMap.put("&hookrightarrow;", "\u21AA");
        lookupMap.put("&hopf;", "\uD835\uDD59");
        lookupMap.put("&horbar;", "\u2015");
        lookupMap.put("&hscr;", "\uD835\uDCBD");
        lookupMap.put("&hslash;", "\u210F");
        lookupMap.put("&hstrok;", "\u0127");
        lookupMap.put("&hybull;", "\u2043");
        lookupMap.put("&hyphen;", "\u2010");
        lookupMap.put("&iacute", "\u00ED");
        lookupMap.put("&iacute;", "\u00ED");
        lookupMap.put("&ic;", "\u2063");
        lookupMap.put("&icirc", "\u00EE");
        lookupMap.put("&icirc;", "\u00EE");
        lookupMap.put("&icy;", "\u0438");
        lookupMap.put("&iecy;", "\u0435");
        lookupMap.put("&iexcl", "\u00A1");
        lookupMap.put("&iexcl;", "\u00A1");
        lookupMap.put("&iff;", "\u21D4");
        lookupMap.put("&ifr;", "\uD835\uDD26");
        lookupMap.put("&igrave", "\u00EC");
        lookupMap.put("&igrave;", "\u00EC");
        lookupMap.put("&ii;", "\u2148");
        lookupMap.put("&iiiint;", "\u2A0C");
        lookupMap.put("&iiint;", "\u222D");
        lookupMap.put("&iinfin;", "\u29DC");
        lookupMap.put("&iiota;", "\u2129");
        lookupMap.put("&ijlig;", "\u0133");
        lookupMap.put("&imacr;", "\u012B");
        lookupMap.put("&image;", "\u2111");
        lookupMap.put("&imagline;", "\u2110");
        lookupMap.put("&imagpart;", "\u2111");
        lookupMap.put("&imath;", "\u0131");
        lookupMap.put("&imof;", "\u22B7");
        lookupMap.put("&imped;", "\u01B5");
        lookupMap.put("&in;", "\u2208");
        lookupMap.put("&incare;", "\u2105");
        lookupMap.put("&infin;", "\u221E");
        lookupMap.put("&infintie;", "\u29DD");
        lookupMap.put("&inodot;", "\u0131");
        lookupMap.put("&int;", "\u222B");
        lookupMap.put("&intcal;", "\u22BA");
        lookupMap.put("&integers;", "\u2124");
        lookupMap.put("&intercal;", "\u22BA");
        lookupMap.put("&intlarhk;", "\u2A17");
        lookupMap.put("&intprod;", "\u2A3C");
        lookupMap.put("&iocy;", "\u0451");
        lookupMap.put("&iogon;", "\u012F");
        lookupMap.put("&iopf;", "\uD835\uDD5A");
        lookupMap.put("&iota;", "\u03B9");
        lookupMap.put("&iprod;", "\u2A3C");
        lookupMap.put("&iquest", "\u00BF");
        lookupMap.put("&iquest;", "\u00BF");
        lookupMap.put("&iscr;", "\uD835\uDCBE");
        lookupMap.put("&isin;", "\u2208");
        lookupMap.put("&isinE;", "\u22F9");
        lookupMap.put("&isindot;", "\u22F5");
        lookupMap.put("&isins;", "\u22F4");
        lookupMap.put("&isinsv;", "\u22F3");
        lookupMap.put("&isinv;", "\u2208");
        lookupMap.put("&it;", "\u2062");
        lookupMap.put("&itilde;", "\u0129");
        lookupMap.put("&iukcy;", "\u0456");
        lookupMap.put("&iuml", "\u00EF");
        lookupMap.put("&iuml;", "\u00EF");
        lookupMap.put("&jcirc;", "\u0135");
        lookupMap.put("&jcy;", "\u0439");
        lookupMap.put("&jfr;", "\uD835\uDD27");
        lookupMap.put("&jmath;", "\u0237");
        lookupMap.put("&jopf;", "\uD835\uDD5B");
        lookupMap.put("&jscr;", "\uD835\uDCBF");
        lookupMap.put("&jsercy;", "\u0458");
        lookupMap.put("&jukcy;", "\u0454");
        lookupMap.put("&kappa;", "\u03BA");
        lookupMap.put("&kappav;", "\u03F0");
        lookupMap.put("&kcedil;", "\u0137");
        lookupMap.put("&kcy;", "\u043A");
        lookupMap.put("&kfr;", "\uD835\uDD28");
        lookupMap.put("&kgreen;", "\u0138");
        lookupMap.put("&khcy;", "\u0445");
        lookupMap.put("&kjcy;", "\u045C");
        lookupMap.put("&kopf;", "\uD835\uDD5C");
        lookupMap.put("&kscr;", "\uD835\uDCC0");
        lookupMap.put("&lAarr;", "\u21DA");
        lookupMap.put("&lArr;", "\u21D0");
        lookupMap.put("&lAtail;", "\u291B");
        lookupMap.put("&lBarr;", "\u290E");
        lookupMap.put("&lE;", "\u2266");
        lookupMap.put("&lEg;", "\u2A8B");
        lookupMap.put("&lHar;", "\u2962");
        lookupMap.put("&lacute;", "\u013A");
        lookupMap.put("&laemptyv;", "\u29B4");
        lookupMap.put("&lagran;", "\u2112");
        lookupMap.put("&lambda;", "\u03BB");
        lookupMap.put("&lang;", "\u27E8");
        lookupMap.put("&langd;", "\u2991");
        lookupMap.put("&langle;", "\u27E8");
        lookupMap.put("&lap;", "\u2A85");
        lookupMap.put("&laquo", "\u00AB");
        lookupMap.put("&laquo;", "\u00AB");
        lookupMap.put("&larr;", "\u2190");
        lookupMap.put("&larrb;", "\u21E4");
        lookupMap.put("&larrbfs;", "\u291F");
        lookupMap.put("&larrfs;", "\u291D");
        lookupMap.put("&larrhk;", "\u21A9");
        lookupMap.put("&larrlp;", "\u21AB");
        lookupMap.put("&larrpl;", "\u2939");
        lookupMap.put("&larrsim;", "\u2973");
        lookupMap.put("&larrtl;", "\u21A2");
        lookupMap.put("&lat;", "\u2AAB");
        lookupMap.put("&latail;", "\u2919");
        lookupMap.put("&late;", "\u2AAD");
        lookupMap.put("&lates;", "\u2AAD\uFE00");
        lookupMap.put("&lbarr;", "\u290C");
        lookupMap.put("&lbbrk;", "\u2772");
        lookupMap.put("&lbrace;", "\u007B");
        lookupMap.put("&lbrack;", "\u005B");
        lookupMap.put("&lbrke;", "\u298B");
        lookupMap.put("&lbrksld;", "\u298F");
        lookupMap.put("&lbrkslu;", "\u298D");
        lookupMap.put("&lcaron;", "\u013E");
        lookupMap.put("&lcedil;", "\u013C");
        lookupMap.put("&lceil;", "\u2308");
        lookupMap.put("&lcub;", "\u007B");
        lookupMap.put("&lcy;", "\u043B");
        lookupMap.put("&ldca;", "\u2936");
        lookupMap.put("&ldquo;", "\u201C");
        lookupMap.put("&ldquor;", "\u201E");
        lookupMap.put("&ldrdhar;", "\u2967");
        lookupMap.put("&ldrushar;", "\u294B");
        lookupMap.put("&ldsh;", "\u21B2");
        lookupMap.put("&le;", "\u2264");
        lookupMap.put("&leftarrow;", "\u2190");
        lookupMap.put("&leftarrowtail;", "\u21A2");
        lookupMap.put("&leftharpoondown;", "\u21BD");
        lookupMap.put("&leftharpoonup;", "\u21BC");
        lookupMap.put("&leftleftarrows;", "\u21C7");
        lookupMap.put("&leftrightarrow;", "\u2194");
        lookupMap.put("&leftrightarrows;", "\u21C6");
        lookupMap.put("&leftrightharpoons;", "\u21CB");
        lookupMap.put("&leftrightsquigarrow;", "\u21AD");
        lookupMap.put("&leftthreetimes;", "\u22CB");
        lookupMap.put("&leg;", "\u22DA");
        lookupMap.put("&leq;", "\u2264");
        lookupMap.put("&leqq;", "\u2266");
        lookupMap.put("&leqslant;", "\u2A7D");
        lookupMap.put("&les;", "\u2A7D");
        lookupMap.put("&lescc;", "\u2AA8");
        lookupMap.put("&lesdot;", "\u2A7F");
        lookupMap.put("&lesdoto;", "\u2A81");
        lookupMap.put("&lesdotor;", "\u2A83");
        lookupMap.put("&lesg;", "\u22DA\uFE00");
        lookupMap.put("&lesges;", "\u2A93");
        lookupMap.put("&lessapprox;", "\u2A85");
        lookupMap.put("&lessdot;", "\u22D6");
        lookupMap.put("&lesseqgtr;", "\u22DA");
        lookupMap.put("&lesseqqgtr;", "\u2A8B");
        lookupMap.put("&lessgtr;", "\u2276");
        lookupMap.put("&lesssim;", "\u2272");
        lookupMap.put("&lfisht;", "\u297C");
        lookupMap.put("&lfloor;", "\u230A");
        lookupMap.put("&lfr;", "\uD835\uDD29");
        lookupMap.put("&lg;", "\u2276");
        lookupMap.put("&lgE;", "\u2A91");
        lookupMap.put("&lhard;", "\u21BD");
        lookupMap.put("&lharu;", "\u21BC");
        lookupMap.put("&lharul;", "\u296A");
        lookupMap.put("&lhblk;", "\u2584");
        lookupMap.put("&ljcy;", "\u0459");
        lookupMap.put("&ll;", "\u226A");
        lookupMap.put("&llarr;", "\u21C7");
        lookupMap.put("&llcorner;", "\u231E");
        lookupMap.put("&llhard;", "\u296B");
        lookupMap.put("&lltri;", "\u25FA");
        lookupMap.put("&lmidot;", "\u0140");
        lookupMap.put("&lmoust;", "\u23B0");
        lookupMap.put("&lmoustache;", "\u23B0");
        lookupMap.put("&lnE;", "\u2268");
        lookupMap.put("&lnap;", "\u2A89");
        lookupMap.put("&lnapprox;", "\u2A89");
        lookupMap.put("&lne;", "\u2A87");
        lookupMap.put("&lneq;", "\u2A87");
        lookupMap.put("&lneqq;", "\u2268");
        lookupMap.put("&lnsim;", "\u22E6");
        lookupMap.put("&loang;", "\u27EC");
        lookupMap.put("&loarr;", "\u21FD");
        lookupMap.put("&lobrk;", "\u27E6");
        lookupMap.put("&longleftarrow;", "\u27F5");
        lookupMap.put("&longleftrightarrow;", "\u27F7");
        lookupMap.put("&longmapsto;", "\u27FC");
        lookupMap.put("&longrightarrow;", "\u27F6");
        lookupMap.put("&looparrowleft;", "\u21AB");
        lookupMap.put("&looparrowright;", "\u21AC");
        lookupMap.put("&lopar;", "\u2985");
        lookupMap.put("&lopf;", "\uD835\uDD5D");
        lookupMap.put("&loplus;", "\u2A2D");
        lookupMap.put("&lotimes;", "\u2A34");
        lookupMap.put("&lowast;", "\u2217");
        lookupMap.put("&lowbar;", "\u005F");
        lookupMap.put("&loz;", "\u25CA");
        lookupMap.put("&lozenge;", "\u25CA");
        lookupMap.put("&lozf;", "\u29EB");
        lookupMap.put("&lpar;", "\u0028");
        lookupMap.put("&lparlt;", "\u2993");
        lookupMap.put("&lrarr;", "\u21C6");
        lookupMap.put("&lrcorner;", "\u231F");
        lookupMap.put("&lrhar;", "\u21CB");
        lookupMap.put("&lrhard;", "\u296D");
        lookupMap.put("&lrm;", "\u200E");
        lookupMap.put("&lrtri;", "\u22BF");
        lookupMap.put("&lsaquo;", "\u2039");
        lookupMap.put("&lscr;", "\uD835\uDCC1");
        lookupMap.put("&lsh;", "\u21B0");
        lookupMap.put("&lsim;", "\u2272");
        lookupMap.put("&lsime;", "\u2A8D");
        lookupMap.put("&lsimg;", "\u2A8F");
        lookupMap.put("&lsqb;", "\u005B");
        lookupMap.put("&lsquo;", "\u2018");
        lookupMap.put("&lsquor;", "\u201A");
        lookupMap.put("&lstrok;", "\u0142");
        lookupMap.put("&lt", "\u003C");
        lookupMap.put("&lt;", "\u003C");
        lookupMap.put("&ltcc;", "\u2AA6");
        lookupMap.put("&ltcir;", "\u2A79");
        lookupMap.put("&ltdot;", "\u22D6");
        lookupMap.put("&lthree;", "\u22CB");
        lookupMap.put("&ltimes;", "\u22C9");
        lookupMap.put("&ltlarr;", "\u2976");
        lookupMap.put("&ltquest;", "\u2A7B");
        lookupMap.put("&ltrPar;", "\u2996");
        lookupMap.put("&ltri;", "\u25C3");
        lookupMap.put("&ltrie;", "\u22B4");
        lookupMap.put("&ltrif;", "\u25C2");
        lookupMap.put("&lurdshar;", "\u294A");
        lookupMap.put("&luruhar;", "\u2966");
        lookupMap.put("&lvertneqq;", "\u2268\uFE00");
        lookupMap.put("&lvnE;", "\u2268\uFE00");
        lookupMap.put("&mDDot;", "\u223A");
        lookupMap.put("&macr", "\u00AF");
        lookupMap.put("&macr;", "\u00AF");
        lookupMap.put("&male;", "\u2642");
        lookupMap.put("&malt;", "\u2720");
        lookupMap.put("&maltese;", "\u2720");
        lookupMap.put("&map;", "\u21A6");
        lookupMap.put("&mapsto;", "\u21A6");
        lookupMap.put("&mapstodown;", "\u21A7");
        lookupMap.put("&mapstoleft;", "\u21A4");
        lookupMap.put("&mapstoup;", "\u21A5");
        lookupMap.put("&marker;", "\u25AE");
        lookupMap.put("&mcomma;", "\u2A29");
        lookupMap.put("&mcy;", "\u043C");
        lookupMap.put("&mdash;", "\u2014");
        lookupMap.put("&measuredangle;", "\u2221");
        lookupMap.put("&mfr;", "\uD835\uDD2A");
        lookupMap.put("&mho;", "\u2127");
        lookupMap.put("&micro", "\u00B5");
        lookupMap.put("&micro;", "\u00B5");
        lookupMap.put("&mid;", "\u2223");
        lookupMap.put("&midast;", "\u002A");
        lookupMap.put("&midcir;", "\u2AF0");
        lookupMap.put("&middot", "\u00B7");
        lookupMap.put("&middot;", "\u00B7");
        lookupMap.put("&minus;", "\u2212");
        lookupMap.put("&minusb;", "\u229F");
        lookupMap.put("&minusd;", "\u2238");
        lookupMap.put("&minusdu;", "\u2A2A");
        lookupMap.put("&mlcp;", "\u2ADB");
        lookupMap.put("&mldr;", "\u2026");
        lookupMap.put("&mnplus;", "\u2213");
        lookupMap.put("&models;", "\u22A7");
        lookupMap.put("&mopf;", "\uD835\uDD5E");
        lookupMap.put("&mp;", "\u2213");
        lookupMap.put("&mscr;", "\uD835\uDCC2");
        lookupMap.put("&mstpos;", "\u223E");
        lookupMap.put("&mu;", "\u03BC");
        lookupMap.put("&multimap;", "\u22B8");
        lookupMap.put("&mumap;", "\u22B8");
        lookupMap.put("&nGg;", "\u22D9\u0338");
        lookupMap.put("&nGt;", "\u226B\u20D2");
        lookupMap.put("&nGtv;", "\u226B\u0338");
        lookupMap.put("&nLeftarrow;", "\u21CD");
        lookupMap.put("&nLeftrightarrow;", "\u21CE");
        lookupMap.put("&nLl;", "\u22D8\u0338");
        lookupMap.put("&nLt;", "\u226A\u20D2");
        lookupMap.put("&nLtv;", "\u226A\u0338");
        lookupMap.put("&nRightarrow;", "\u21CF");
        lookupMap.put("&nVDash;", "\u22AF");
        lookupMap.put("&nVdash;", "\u22AE");
        lookupMap.put("&nabla;", "\u2207");
        lookupMap.put("&nacute;", "\u0144");
        lookupMap.put("&nang;", "\u2220\u20D2");
        lookupMap.put("&nap;", "\u2249");
        lookupMap.put("&napE;", "\u2A70\u0338");
        lookupMap.put("&napid;", "\u224B\u0338");
        lookupMap.put("&napos;", "\u0149");
        lookupMap.put("&napprox;", "\u2249");
        lookupMap.put("&natur;", "\u266E");
        lookupMap.put("&natural;", "\u266E");
        lookupMap.put("&naturals;", "\u2115");
        lookupMap.put("&nbsp", "\u00A0");
        lookupMap.put("&nbsp;", "\u00A0");
        lookupMap.put("&nbump;", "\u224E\u0338");
        lookupMap.put("&nbumpe;", "\u224F\u0338");
        lookupMap.put("&ncap;", "\u2A43");
        lookupMap.put("&ncaron;", "\u0148");
        lookupMap.put("&ncedil;", "\u0146");
        lookupMap.put("&ncong;", "\u2247");
        lookupMap.put("&ncongdot;", "\u2A6D\u0338");
        lookupMap.put("&ncup;", "\u2A42");
        lookupMap.put("&ncy;", "\u043D");
        lookupMap.put("&ndash;", "\u2013");
        lookupMap.put("&ne;", "\u2260");
        lookupMap.put("&neArr;", "\u21D7");
        lookupMap.put("&nearhk;", "\u2924");
        lookupMap.put("&nearr;", "\u2197");
        lookupMap.put("&nearrow;", "\u2197");
        lookupMap.put("&nedot;", "\u2250\u0338");
        lookupMap.put("&nequiv;", "\u2262");
        lookupMap.put("&nesear;", "\u2928");
        lookupMap.put("&nesim;", "\u2242\u0338");
        lookupMap.put("&nexist;", "\u2204");
        lookupMap.put("&nexists;", "\u2204");
        lookupMap.put("&nfr;", "\uD835\uDD2B");
        lookupMap.put("&ngE;", "\u2267\u0338");
        lookupMap.put("&nge;", "\u2271");
        lookupMap.put("&ngeq;", "\u2271");
        lookupMap.put("&ngeqq;", "\u2267\u0338");
        lookupMap.put("&ngeqslant;", "\u2A7E\u0338");
        lookupMap.put("&nges;", "\u2A7E\u0338");
        lookupMap.put("&ngsim;", "\u2275");
        lookupMap.put("&ngt;", "\u226F");
        lookupMap.put("&ngtr;", "\u226F");
        lookupMap.put("&nhArr;", "\u21CE");
        lookupMap.put("&nharr;", "\u21AE");
        lookupMap.put("&nhpar;", "\u2AF2");
        lookupMap.put("&ni;", "\u220B");
        lookupMap.put("&nis;", "\u22FC");
        lookupMap.put("&nisd;", "\u22FA");
        lookupMap.put("&niv;", "\u220B");
        lookupMap.put("&njcy;", "\u045A");
        lookupMap.put("&nlArr;", "\u21CD");
        lookupMap.put("&nlE;", "\u2266\u0338");
        lookupMap.put("&nlarr;", "\u219A");
        lookupMap.put("&nldr;", "\u2025");
        lookupMap.put("&nle;", "\u2270");
        lookupMap.put("&nleftarrow;", "\u219A");
        lookupMap.put("&nleftrightarrow;", "\u21AE");
        lookupMap.put("&nleq;", "\u2270");
        lookupMap.put("&nleqq;", "\u2266\u0338");
        lookupMap.put("&nleqslant;", "\u2A7D\u0338");
        lookupMap.put("&nles;", "\u2A7D\u0338");
        lookupMap.put("&nless;", "\u226E");
        lookupMap.put("&nlsim;", "\u2274");
        lookupMap.put("&nlt;", "\u226E");
        lookupMap.put("&nltri;", "\u22EA");
        lookupMap.put("&nltrie;", "\u22EC");
        lookupMap.put("&nmid;", "\u2224");
        lookupMap.put("&nopf;", "\uD835\uDD5F");
        lookupMap.put("&not", "\u00AC");
        lookupMap.put("&not;", "\u00AC");
        lookupMap.put("&notin;", "\u2209");
        lookupMap.put("&notinE;", "\u22F9\u0338");
        lookupMap.put("&notindot;", "\u22F5\u0338");
        lookupMap.put("&notinva;", "\u2209");
        lookupMap.put("&notinvb;", "\u22F7");
        lookupMap.put("&notinvc;", "\u22F6");
        lookupMap.put("&notni;", "\u220C");
        lookupMap.put("&notniva;", "\u220C");
        lookupMap.put("&notnivb;", "\u22FE");
        lookupMap.put("&notnivc;", "\u22FD");
        lookupMap.put("&npar;", "\u2226");
        lookupMap.put("&nparallel;", "\u2226");
        lookupMap.put("&nparsl;", "\u2AFD\u20E5");
        lookupMap.put("&npart;", "\u2202\u0338");
        lookupMap.put("&npolint;", "\u2A14");
        lookupMap.put("&npr;", "\u2280");
        lookupMap.put("&nprcue;", "\u22E0");
        lookupMap.put("&npre;", "\u2AAF\u0338");
        lookupMap.put("&nprec;", "\u2280");
        lookupMap.put("&npreceq;", "\u2AAF\u0338");
        lookupMap.put("&nrArr;", "\u21CF");
        lookupMap.put("&nrarr;", "\u219B");
        lookupMap.put("&nrarrc;", "\u2933\u0338");
        lookupMap.put("&nrarrw;", "\u219D\u0338");
        lookupMap.put("&nrightarrow;", "\u219B");
        lookupMap.put("&nrtri;", "\u22EB");
        lookupMap.put("&nrtrie;", "\u22ED");
        lookupMap.put("&nsc;", "\u2281");
        lookupMap.put("&nsccue;", "\u22E1");
        lookupMap.put("&nsce;", "\u2AB0\u0338");
        lookupMap.put("&nscr;", "\uD835\uDCC3");
        lookupMap.put("&nshortmid;", "\u2224");
        lookupMap.put("&nshortparallel;", "\u2226");
        lookupMap.put("&nsim;", "\u2241");
        lookupMap.put("&nsime;", "\u2244");
        lookupMap.put("&nsimeq;", "\u2244");
        lookupMap.put("&nsmid;", "\u2224");
        lookupMap.put("&nspar;", "\u2226");
        lookupMap.put("&nsqsube;", "\u22E2");
        lookupMap.put("&nsqsupe;", "\u22E3");
        lookupMap.put("&nsub;", "\u2284");
        lookupMap.put("&nsubE;", "\u2AC5\u0338");
        lookupMap.put("&nsube;", "\u2288");
        lookupMap.put("&nsubset;", "\u2282\u20D2");
        lookupMap.put("&nsubseteq;", "\u2288");
        lookupMap.put("&nsubseteqq;", "\u2AC5\u0338");
        lookupMap.put("&nsucc;", "\u2281");
        lookupMap.put("&nsucceq;", "\u2AB0\u0338");
        lookupMap.put("&nsup;", "\u2285");
        lookupMap.put("&nsupE;", "\u2AC6\u0338");
        lookupMap.put("&nsupe;", "\u2289");
        lookupMap.put("&nsupset;", "\u2283\u20D2");
        lookupMap.put("&nsupseteq;", "\u2289");
        lookupMap.put("&nsupseteqq;", "\u2AC6\u0338");
        lookupMap.put("&ntgl;", "\u2279");
        lookupMap.put("&ntilde", "\u00F1");
        lookupMap.put("&ntilde;", "\u00F1");
        lookupMap.put("&ntlg;", "\u2278");
        lookupMap.put("&ntriangleleft;", "\u22EA");
        lookupMap.put("&ntrianglelefteq;", "\u22EC");
        lookupMap.put("&ntriangleright;", "\u22EB");
        lookupMap.put("&ntrianglerighteq;", "\u22ED");
        lookupMap.put("&nu;", "\u03BD");
        lookupMap.put("&num;", "\u0023");
        lookupMap.put("&numero;", "\u2116");
        lookupMap.put("&numsp;", "\u2007");
        lookupMap.put("&nvDash;", "\u22AD");
        lookupMap.put("&nvHarr;", "\u2904");
        lookupMap.put("&nvap;", "\u224D\u20D2");
        lookupMap.put("&nvdash;", "\u22AC");
        lookupMap.put("&nvge;", "\u2265\u20D2");
        lookupMap.put("&nvgt;", "\u003E\u20D2");
        lookupMap.put("&nvinfin;", "\u29DE");
        lookupMap.put("&nvlArr;", "\u2902");
        lookupMap.put("&nvle;", "\u2264\u20D2");
        lookupMap.put("&nvlt;", "\u003C\u20D2");
        lookupMap.put("&nvltrie;", "\u22B4\u20D2");
        lookupMap.put("&nvrArr;", "\u2903");
        lookupMap.put("&nvrtrie;", "\u22B5\u20D2");
        lookupMap.put("&nvsim;", "\u223C\u20D2");
        lookupMap.put("&nwArr;", "\u21D6");
        lookupMap.put("&nwarhk;", "\u2923");
        lookupMap.put("&nwarr;", "\u2196");
        lookupMap.put("&nwarrow;", "\u2196");
        lookupMap.put("&nwnear;", "\u2927");
        lookupMap.put("&oS;", "\u24C8");
        lookupMap.put("&oacute", "\u00F3");
        lookupMap.put("&oacute;", "\u00F3");
        lookupMap.put("&oast;", "\u229B");
        lookupMap.put("&ocir;", "\u229A");
        lookupMap.put("&ocirc", "\u00F4");
        lookupMap.put("&ocirc;", "\u00F4");
        lookupMap.put("&ocy;", "\u043E");
        lookupMap.put("&odash;", "\u229D");
        lookupMap.put("&odblac;", "\u0151");
        lookupMap.put("&odiv;", "\u2A38");
        lookupMap.put("&odot;", "\u2299");
        lookupMap.put("&odsold;", "\u29BC");
        lookupMap.put("&oelig;", "\u0153");
        lookupMap.put("&ofcir;", "\u29BF");
        lookupMap.put("&ofr;", "\uD835\uDD2C");
        lookupMap.put("&ogon;", "\u02DB");
        lookupMap.put("&ograve", "\u00F2");
        lookupMap.put("&ograve;", "\u00F2");
        lookupMap.put("&ogt;", "\u29C1");
        lookupMap.put("&ohbar;", "\u29B5");
        lookupMap.put("&ohm;", "\u03A9");
        lookupMap.put("&oint;", "\u222E");
        lookupMap.put("&olarr;", "\u21BA");
        lookupMap.put("&olcir;", "\u29BE");
        lookupMap.put("&olcross;", "\u29BB");
        lookupMap.put("&oline;", "\u203E");
        lookupMap.put("&olt;", "\u29C0");
        lookupMap.put("&omacr;", "\u014D");
        lookupMap.put("&omega;", "\u03C9");
        lookupMap.put("&omicron;", "\u03BF");
        lookupMap.put("&omid;", "\u29B6");
        lookupMap.put("&ominus;", "\u2296");
        lookupMap.put("&oopf;", "\uD835\uDD60");
        lookupMap.put("&opar;", "\u29B7");
        lookupMap.put("&operp;", "\u29B9");
        lookupMap.put("&oplus;", "\u2295");
        lookupMap.put("&or;", "\u2228");
        lookupMap.put("&orarr;", "\u21BB");
        lookupMap.put("&ord;", "\u2A5D");
        lookupMap.put("&order;", "\u2134");
        lookupMap.put("&orderof;", "\u2134");
        lookupMap.put("&ordf", "\u00AA");
        lookupMap.put("&ordf;", "\u00AA");
        lookupMap.put("&ordm", "\u00BA");
        lookupMap.put("&ordm;", "\u00BA");
        lookupMap.put("&origof;", "\u22B6");
        lookupMap.put("&oror;", "\u2A56");
        lookupMap.put("&orslope;", "\u2A57");
        lookupMap.put("&orv;", "\u2A5B");
        lookupMap.put("&oscr;", "\u2134");
        lookupMap.put("&oslash", "\u00F8");
        lookupMap.put("&oslash;", "\u00F8");
        lookupMap.put("&osol;", "\u2298");
        lookupMap.put("&otilde", "\u00F5");
        lookupMap.put("&otilde;", "\u00F5");
        lookupMap.put("&otimes;", "\u2297");
        lookupMap.put("&otimesas;", "\u2A36");
        lookupMap.put("&ouml", "\u00F6");
        lookupMap.put("&ouml;", "\u00F6");
        lookupMap.put("&ovbar;", "\u233D");
        lookupMap.put("&par;", "\u2225");
        lookupMap.put("&para", "\u00B6");
        lookupMap.put("&para;", "\u00B6");
        lookupMap.put("&parallel;", "\u2225");
        lookupMap.put("&parsim;", "\u2AF3");
        lookupMap.put("&parsl;", "\u2AFD");
        lookupMap.put("&part;", "\u2202");
        lookupMap.put("&pcy;", "\u043F");
        lookupMap.put("&percnt;", "\u0025");
        lookupMap.put("&period;", "\u002E");
        lookupMap.put("&permil;", "\u2030");
        lookupMap.put("&perp;", "\u22A5");
        lookupMap.put("&pertenk;", "\u2031");
        lookupMap.put("&pfr;", "\uD835\uDD2D");
        lookupMap.put("&phi;", "\u03C6");
        lookupMap.put("&phiv;", "\u03D5");
        lookupMap.put("&phmmat;", "\u2133");
        lookupMap.put("&phone;", "\u260E");
        lookupMap.put("&pi;", "\u03C0");
        lookupMap.put("&pitchfork;", "\u22D4");
        lookupMap.put("&piv;", "\u03D6");
        lookupMap.put("&planck;", "\u210F");
        lookupMap.put("&planckh;", "\u210E");
        lookupMap.put("&plankv;", "\u210F");
        lookupMap.put("&plus;", "\u002B");
        lookupMap.put("&plusacir;", "\u2A23");
        lookupMap.put("&plusb;", "\u229E");
        lookupMap.put("&pluscir;", "\u2A22");
        lookupMap.put("&plusdo;", "\u2214");
        lookupMap.put("&plusdu;", "\u2A25");
        lookupMap.put("&pluse;", "\u2A72");
        lookupMap.put("&plusmn", "\u00B1");
        lookupMap.put("&plusmn;", "\u00B1");
        lookupMap.put("&plussim;", "\u2A26");
        lookupMap.put("&plustwo;", "\u2A27");
        lookupMap.put("&pm;", "\u00B1");
        lookupMap.put("&pointint;", "\u2A15");
        lookupMap.put("&popf;", "\uD835\uDD61");
        lookupMap.put("&pound", "\u00A3");
        lookupMap.put("&pound;", "\u00A3");
        lookupMap.put("&pr;", "\u227A");
        lookupMap.put("&prE;", "\u2AB3");
        lookupMap.put("&prap;", "\u2AB7");
        lookupMap.put("&prcue;", "\u227C");
        lookupMap.put("&pre;", "\u2AAF");
        lookupMap.put("&prec;", "\u227A");
        lookupMap.put("&precapprox;", "\u2AB7");
        lookupMap.put("&preccurlyeq;", "\u227C");
        lookupMap.put("&preceq;", "\u2AAF");
        lookupMap.put("&precnapprox;", "\u2AB9");
        lookupMap.put("&precneqq;", "\u2AB5");
        lookupMap.put("&precnsim;", "\u22E8");
        lookupMap.put("&precsim;", "\u227E");
        lookupMap.put("&prime;", "\u2032");
        lookupMap.put("&primes;", "\u2119");
        lookupMap.put("&prnE;", "\u2AB5");
        lookupMap.put("&prnap;", "\u2AB9");
        lookupMap.put("&prnsim;", "\u22E8");
        lookupMap.put("&prod;", "\u220F");
        lookupMap.put("&profalar;", "\u232E");
        lookupMap.put("&profline;", "\u2312");
        lookupMap.put("&profsurf;", "\u2313");
        lookupMap.put("&prop;", "\u221D");
        lookupMap.put("&propto;", "\u221D");
        lookupMap.put("&prsim;", "\u227E");
        lookupMap.put("&prurel;", "\u22B0");
        lookupMap.put("&pscr;", "\uD835\uDCC5");
        lookupMap.put("&psi;", "\u03C8");
        lookupMap.put("&puncsp;", "\u2008");
        lookupMap.put("&qfr;", "\uD835\uDD2E");
        lookupMap.put("&qint;", "\u2A0C");
        lookupMap.put("&qopf;", "\uD835\uDD62");
        lookupMap.put("&qprime;", "\u2057");
        lookupMap.put("&qscr;", "\uD835\uDCC6");
        lookupMap.put("&quaternions;", "\u210D");
        lookupMap.put("&quatint;", "\u2A16");
        lookupMap.put("&quest;", "\u003F");
        lookupMap.put("&questeq;", "\u225F");
        lookupMap.put("&quot", "\"");
        lookupMap.put("&quot;", "\"");
        lookupMap.put("&rAarr;", "\u21DB");
        lookupMap.put("&rArr;", "\u21D2");
        lookupMap.put("&rAtail;", "\u291C");
        lookupMap.put("&rBarr;", "\u290F");
        lookupMap.put("&rHar;", "\u2964");
        lookupMap.put("&race;", "\u223D\u0331");
        lookupMap.put("&racute;", "\u0155");
        lookupMap.put("&radic;", "\u221A");
        lookupMap.put("&raemptyv;", "\u29B3");
        lookupMap.put("&rang;", "\u27E9");
        lookupMap.put("&rangd;", "\u2992");
        lookupMap.put("&range;", "\u29A5");
        lookupMap.put("&rangle;", "\u27E9");
        lookupMap.put("&raquo", "\u00BB");
        lookupMap.put("&raquo;", "\u00BB");
        lookupMap.put("&rarr;", "\u2192");
        lookupMap.put("&rarrap;", "\u2975");
        lookupMap.put("&rarrb;", "\u21E5");
        lookupMap.put("&rarrbfs;", "\u2920");
        lookupMap.put("&rarrc;", "\u2933");
        lookupMap.put("&rarrfs;", "\u291E");
        lookupMap.put("&rarrhk;", "\u21AA");
        lookupMap.put("&rarrlp;", "\u21AC");
        lookupMap.put("&rarrpl;", "\u2945");
        lookupMap.put("&rarrsim;", "\u2974");
        lookupMap.put("&rarrtl;", "\u21A3");
        lookupMap.put("&rarrw;", "\u219D");
        lookupMap.put("&ratail;", "\u291A");
        lookupMap.put("&ratio;", "\u2236");
        lookupMap.put("&rationals;", "\u211A");
        lookupMap.put("&rbarr;", "\u290D");
        lookupMap.put("&rbbrk;", "\u2773");
        lookupMap.put("&rbrace;", "\u007D");
        lookupMap.put("&rbrack;", "\u005D");
        lookupMap.put("&rbrke;", "\u298C");
        lookupMap.put("&rbrksld;", "\u298E");
        lookupMap.put("&rbrkslu;", "\u2990");
        lookupMap.put("&rcaron;", "\u0159");
        lookupMap.put("&rcedil;", "\u0157");
        lookupMap.put("&rceil;", "\u2309");
        lookupMap.put("&rcub;", "\u007D");
        lookupMap.put("&rcy;", "\u0440");
        lookupMap.put("&rdca;", "\u2937");
        lookupMap.put("&rdldhar;", "\u2969");
        lookupMap.put("&rdquo;", "\u201D");
        lookupMap.put("&rdquor;", "\u201D");
        lookupMap.put("&rdsh;", "\u21B3");
        lookupMap.put("&real;", "\u211C");
        lookupMap.put("&realine;", "\u211B");
        lookupMap.put("&realpart;", "\u211C");
        lookupMap.put("&reals;", "\u211D");
        lookupMap.put("&rect;", "\u25AD");
        lookupMap.put("&reg", "\u00AE");
        lookupMap.put("&reg;", "\u00AE");
        lookupMap.put("&rfisht;", "\u297D");
        lookupMap.put("&rfloor;", "\u230B");
        lookupMap.put("&rfr;", "\uD835\uDD2F");
        lookupMap.put("&rhard;", "\u21C1");
        lookupMap.put("&rharu;", "\u21C0");
        lookupMap.put("&rharul;", "\u296C");
        lookupMap.put("&rho;", "\u03C1");
        lookupMap.put("&rhov;", "\u03F1");
        lookupMap.put("&rightarrow;", "\u2192");
        lookupMap.put("&rightarrowtail;", "\u21A3");
        lookupMap.put("&rightharpoondown;", "\u21C1");
        lookupMap.put("&rightharpoonup;", "\u21C0");
        lookupMap.put("&rightleftarrows;", "\u21C4");
        lookupMap.put("&rightleftharpoons;", "\u21CC");
        lookupMap.put("&rightrightarrows;", "\u21C9");
        lookupMap.put("&rightsquigarrow;", "\u219D");
        lookupMap.put("&rightthreetimes;", "\u22CC");
        lookupMap.put("&ring;", "\u02DA");
        lookupMap.put("&risingdotseq;", "\u2253");
        lookupMap.put("&rlarr;", "\u21C4");
        lookupMap.put("&rlhar;", "\u21CC");
        lookupMap.put("&rlm;", "\u200F");
        lookupMap.put("&rmoust;", "\u23B1");
        lookupMap.put("&rmoustache;", "\u23B1");
        lookupMap.put("&rnmid;", "\u2AEE");
        lookupMap.put("&roang;", "\u27ED");
        lookupMap.put("&roarr;", "\u21FE");
        lookupMap.put("&robrk;", "\u27E7");
        lookupMap.put("&ropar;", "\u2986");
        lookupMap.put("&ropf;", "\uD835\uDD63");
        lookupMap.put("&roplus;", "\u2A2E");
        lookupMap.put("&rotimes;", "\u2A35");
        lookupMap.put("&rpar;", "\u0029");
        lookupMap.put("&rpargt;", "\u2994");
        lookupMap.put("&rppolint;", "\u2A12");
        lookupMap.put("&rrarr;", "\u21C9");
        lookupMap.put("&rsaquo;", "\u203A");
        lookupMap.put("&rscr;", "\uD835\uDCC7");
        lookupMap.put("&rsh;", "\u21B1");
        lookupMap.put("&rsqb;", "\u005D");
        lookupMap.put("&rsquo;", "\u2019");
        lookupMap.put("&rsquor;", "\u2019");
        lookupMap.put("&rthree;", "\u22CC");
        lookupMap.put("&rtimes;", "\u22CA");
        lookupMap.put("&rtri;", "\u25B9");
        lookupMap.put("&rtrie;", "\u22B5");
        lookupMap.put("&rtrif;", "\u25B8");
        lookupMap.put("&rtriltri;", "\u29CE");
        lookupMap.put("&ruluhar;", "\u2968");
        lookupMap.put("&rx;", "\u211E");
        lookupMap.put("&sacute;", "\u015B");
        lookupMap.put("&sbquo;", "\u201A");
        lookupMap.put("&sc;", "\u227B");
        lookupMap.put("&scE;", "\u2AB4");
        lookupMap.put("&scap;", "\u2AB8");
        lookupMap.put("&scaron;", "\u0161");
        lookupMap.put("&sccue;", "\u227D");
        lookupMap.put("&sce;", "\u2AB0");
        lookupMap.put("&scedil;", "\u015F");
        lookupMap.put("&scirc;", "\u015D");
        lookupMap.put("&scnE;", "\u2AB6");
        lookupMap.put("&scnap;", "\u2ABA");
        lookupMap.put("&scnsim;", "\u22E9");
        lookupMap.put("&scpolint;", "\u2A13");
        lookupMap.put("&scsim;", "\u227F");
        lookupMap.put("&scy;", "\u0441");
        lookupMap.put("&sdot;", "\u22C5");
        lookupMap.put("&sdotb;", "\u22A1");
        lookupMap.put("&sdote;", "\u2A66");
        lookupMap.put("&seArr;", "\u21D8");
        lookupMap.put("&searhk;", "\u2925");
        lookupMap.put("&searr;", "\u2198");
        lookupMap.put("&searrow;", "\u2198");
        lookupMap.put("&sect", "\u00A7");
        lookupMap.put("&sect;", "\u00A7");
        lookupMap.put("&semi;", "\u003B");
        lookupMap.put("&seswar;", "\u2929");
        lookupMap.put("&setminus;", "\u2216");
        lookupMap.put("&setmn;", "\u2216");
        lookupMap.put("&sext;", "\u2736");
        lookupMap.put("&sfr;", "\uD835\uDD30");
        lookupMap.put("&sfrown;", "\u2322");
        lookupMap.put("&sharp;", "\u266F");
        lookupMap.put("&shchcy;", "\u0449");
        lookupMap.put("&shcy;", "\u0448");
        lookupMap.put("&shortmid;", "\u2223");
        lookupMap.put("&shortparallel;", "\u2225");
        lookupMap.put("&shy", "\u00AD");
        lookupMap.put("&shy;", "\u00AD");
        lookupMap.put("&sigma;", "\u03C3");
        lookupMap.put("&sigmaf;", "\u03C2");
        lookupMap.put("&sigmav;", "\u03C2");
        lookupMap.put("&sim;", "\u223C");
        lookupMap.put("&simdot;", "\u2A6A");
        lookupMap.put("&sime;", "\u2243");
        lookupMap.put("&simeq;", "\u2243");
        lookupMap.put("&simg;", "\u2A9E");
        lookupMap.put("&simgE;", "\u2AA0");
        lookupMap.put("&siml;", "\u2A9D");
        lookupMap.put("&simlE;", "\u2A9F");
        lookupMap.put("&simne;", "\u2246");
        lookupMap.put("&simplus;", "\u2A24");
        lookupMap.put("&simrarr;", "\u2972");
        lookupMap.put("&slarr;", "\u2190");
        lookupMap.put("&smallsetminus;", "\u2216");
        lookupMap.put("&smashp;", "\u2A33");
        lookupMap.put("&smeparsl;", "\u29E4");
        lookupMap.put("&smid;", "\u2223");
        lookupMap.put("&smile;", "\u2323");
        lookupMap.put("&smt;", "\u2AAA");
        lookupMap.put("&smte;", "\u2AAC");
        lookupMap.put("&smtes;", "\u2AAC\uFE00");
        lookupMap.put("&softcy;", "\u044C");
        lookupMap.put("&sol;", "\u002F");
        lookupMap.put("&solb;", "\u29C4");
        lookupMap.put("&solbar;", "\u233F");
        lookupMap.put("&sopf;", "\uD835\uDD64");
        lookupMap.put("&spades;", "\u2660");
        lookupMap.put("&spadesuit;", "\u2660");
        lookupMap.put("&spar;", "\u2225");
        lookupMap.put("&sqcap;", "\u2293");
        lookupMap.put("&sqcaps;", "\u2293\uFE00");
        lookupMap.put("&sqcup;", "\u2294");
        lookupMap.put("&sqcups;", "\u2294\uFE00");
        lookupMap.put("&sqsub;", "\u228F");
        lookupMap.put("&sqsube;", "\u2291");
        lookupMap.put("&sqsubset;", "\u228F");
        lookupMap.put("&sqsubseteq;", "\u2291");
        lookupMap.put("&sqsup;", "\u2290");
        lookupMap.put("&sqsupe;", "\u2292");
        lookupMap.put("&sqsupset;", "\u2290");
        lookupMap.put("&sqsupseteq;", "\u2292");
        lookupMap.put("&squ;", "\u25A1");
        lookupMap.put("&square;", "\u25A1");
        lookupMap.put("&squarf;", "\u25AA");
        lookupMap.put("&squf;", "\u25AA");
        lookupMap.put("&srarr;", "\u2192");
        lookupMap.put("&sscr;", "\uD835\uDCC8");
        lookupMap.put("&ssetmn;", "\u2216");
        lookupMap.put("&ssmile;", "\u2323");
        lookupMap.put("&sstarf;", "\u22C6");
        lookupMap.put("&star;", "\u2606");
        lookupMap.put("&starf;", "\u2605");
        lookupMap.put("&straightepsilon;", "\u03F5");
        lookupMap.put("&straightphi;", "\u03D5");
        lookupMap.put("&strns;", "\u00AF");
        lookupMap.put("&sub;", "\u2282");
        lookupMap.put("&subE;", "\u2AC5");
        lookupMap.put("&subdot;", "\u2ABD");
        lookupMap.put("&sube;", "\u2286");
        lookupMap.put("&subedot;", "\u2AC3");
        lookupMap.put("&submult;", "\u2AC1");
        lookupMap.put("&subnE;", "\u2ACB");
        lookupMap.put("&subne;", "\u228A");
        lookupMap.put("&subplus;", "\u2ABF");
        lookupMap.put("&subrarr;", "\u2979");
        lookupMap.put("&subset;", "\u2282");
        lookupMap.put("&subseteq;", "\u2286");
        lookupMap.put("&subseteqq;", "\u2AC5");
        lookupMap.put("&subsetneq;", "\u228A");
        lookupMap.put("&subsetneqq;", "\u2ACB");
        lookupMap.put("&subsim;", "\u2AC7");
        lookupMap.put("&subsub;", "\u2AD5");
        lookupMap.put("&subsup;", "\u2AD3");
        lookupMap.put("&succ;", "\u227B");
        lookupMap.put("&succapprox;", "\u2AB8");
        lookupMap.put("&succcurlyeq;", "\u227D");
        lookupMap.put("&succeq;", "\u2AB0");
        lookupMap.put("&succnapprox;", "\u2ABA");
        lookupMap.put("&succneqq;", "\u2AB6");
        lookupMap.put("&succnsim;", "\u22E9");
        lookupMap.put("&succsim;", "\u227F");
        lookupMap.put("&sum;", "\u2211");
        lookupMap.put("&sung;", "\u266A");
        lookupMap.put("&sup1", "\u00B9");
        lookupMap.put("&sup1;", "\u00B9");
        lookupMap.put("&sup2", "\u00B2");
        lookupMap.put("&sup2;", "\u00B2");
        lookupMap.put("&sup3", "\u00B3");
        lookupMap.put("&sup3;", "\u00B3");
        lookupMap.put("&sup;", "\u2283");
        lookupMap.put("&supE;", "\u2AC6");
        lookupMap.put("&supdot;", "\u2ABE");
        lookupMap.put("&supdsub;", "\u2AD8");
        lookupMap.put("&supe;", "\u2287");
        lookupMap.put("&supedot;", "\u2AC4");
        lookupMap.put("&suphsol;", "\u27C9");
        lookupMap.put("&suphsub;", "\u2AD7");
        lookupMap.put("&suplarr;", "\u297B");
        lookupMap.put("&supmult;", "\u2AC2");
        lookupMap.put("&supnE;", "\u2ACC");
        lookupMap.put("&supne;", "\u228B");
        lookupMap.put("&supplus;", "\u2AC0");
        lookupMap.put("&supset;", "\u2283");
        lookupMap.put("&supseteq;", "\u2287");
        lookupMap.put("&supseteqq;", "\u2AC6");
        lookupMap.put("&supsetneq;", "\u228B");
        lookupMap.put("&supsetneqq;", "\u2ACC");
        lookupMap.put("&supsim;", "\u2AC8");
        lookupMap.put("&supsub;", "\u2AD4");
        lookupMap.put("&supsup;", "\u2AD6");
        lookupMap.put("&swArr;", "\u21D9");
        lookupMap.put("&swarhk;", "\u2926");
        lookupMap.put("&swarr;", "\u2199");
        lookupMap.put("&swarrow;", "\u2199");
        lookupMap.put("&swnwar;", "\u292A");
        lookupMap.put("&szlig", "\u00DF");
        lookupMap.put("&szlig;", "\u00DF");
        lookupMap.put("&target;", "\u2316");
        lookupMap.put("&tau;", "\u03C4");
        lookupMap.put("&tbrk;", "\u23B4");
        lookupMap.put("&tcaron;", "\u0165");
        lookupMap.put("&tcedil;", "\u0163");
        lookupMap.put("&tcy;", "\u0442");
        lookupMap.put("&tdot;", "\u20DB");
        lookupMap.put("&telrec;", "\u2315");
        lookupMap.put("&tfr;", "\uD835\uDD31");
        lookupMap.put("&there4;", "\u2234");
        lookupMap.put("&therefore;", "\u2234");
        lookupMap.put("&theta;", "\u03B8");
        lookupMap.put("&thetasym;", "\u03D1");
        lookupMap.put("&thetav;", "\u03D1");
        lookupMap.put("&thickapprox;", "\u2248");
        lookupMap.put("&thicksim;", "\u223C");
        lookupMap.put("&thinsp;", "\u2009");
        lookupMap.put("&thkap;", "\u2248");
        lookupMap.put("&thksim;", "\u223C");
        lookupMap.put("&thorn", "\u00FE");
        lookupMap.put("&thorn;", "\u00FE");
        lookupMap.put("&tilde;", "\u02DC");
        lookupMap.put("&times", "\u00D7");
        lookupMap.put("&times;", "\u00D7");
        lookupMap.put("&timesb;", "\u22A0");
        lookupMap.put("&timesbar;", "\u2A31");
        lookupMap.put("&timesd;", "\u2A30");
        lookupMap.put("&tint;", "\u222D");
        lookupMap.put("&toea;", "\u2928");
        lookupMap.put("&top;", "\u22A4");
        lookupMap.put("&topbot;", "\u2336");
        lookupMap.put("&topcir;", "\u2AF1");
        lookupMap.put("&topf;", "\uD835\uDD65");
        lookupMap.put("&topfork;", "\u2ADA");
        lookupMap.put("&tosa;", "\u2929");
        lookupMap.put("&tprime;", "\u2034");
        lookupMap.put("&trade;", "\u2122");
        lookupMap.put("&triangle;", "\u25B5");
        lookupMap.put("&triangledown;", "\u25BF");
        lookupMap.put("&triangleleft;", "\u25C3");
        lookupMap.put("&trianglelefteq;", "\u22B4");
        lookupMap.put("&triangleq;", "\u225C");
        lookupMap.put("&triangleright;", "\u25B9");
        lookupMap.put("&trianglerighteq;", "\u22B5");
        lookupMap.put("&tridot;", "\u25EC");
        lookupMap.put("&trie;", "\u225C");
        lookupMap.put("&triminus;", "\u2A3A");
        lookupMap.put("&triplus;", "\u2A39");
        lookupMap.put("&trisb;", "\u29CD");
        lookupMap.put("&tritime;", "\u2A3B");
        lookupMap.put("&trpezium;", "\u23E2");
        lookupMap.put("&tscr;", "\uD835\uDCC9");
        lookupMap.put("&tscy;", "\u0446");
        lookupMap.put("&tshcy;", "\u045B");
        lookupMap.put("&tstrok;", "\u0167");
        lookupMap.put("&twixt;", "\u226C");
        lookupMap.put("&twoheadleftarrow;", "\u219E");
        lookupMap.put("&twoheadrightarrow;", "\u21A0");
        lookupMap.put("&uArr;", "\u21D1");
        lookupMap.put("&uHar;", "\u2963");
        lookupMap.put("&uacute", "\u00FA");
        lookupMap.put("&uacute;", "\u00FA");
        lookupMap.put("&uarr;", "\u2191");
        lookupMap.put("&ubrcy;", "\u045E");
        lookupMap.put("&ubreve;", "\u016D");
        lookupMap.put("&ucirc", "\u00FB");
        lookupMap.put("&ucirc;", "\u00FB");
        lookupMap.put("&ucy;", "\u0443");
        lookupMap.put("&udarr;", "\u21C5");
        lookupMap.put("&udblac;", "\u0171");
        lookupMap.put("&udhar;", "\u296E");
        lookupMap.put("&ufisht;", "\u297E");
        lookupMap.put("&ufr;", "\uD835\uDD32");
        lookupMap.put("&ugrave", "\u00F9");
        lookupMap.put("&ugrave;", "\u00F9");
        lookupMap.put("&uharl;", "\u21BF");
        lookupMap.put("&uharr;", "\u21BE");
        lookupMap.put("&uhblk;", "\u2580");
        lookupMap.put("&ulcorn;", "\u231C");
        lookupMap.put("&ulcorner;", "\u231C");
        lookupMap.put("&ulcrop;", "\u230F");
        lookupMap.put("&ultri;", "\u25F8");
        lookupMap.put("&umacr;", "\u016B");
        lookupMap.put("&uml", "\u00A8");
        lookupMap.put("&uml;", "\u00A8");
        lookupMap.put("&uogon;", "\u0173");
        lookupMap.put("&uopf;", "\uD835\uDD66");
        lookupMap.put("&uparrow;", "\u2191");
        lookupMap.put("&updownarrow;", "\u2195");
        lookupMap.put("&upharpoonleft;", "\u21BF");
        lookupMap.put("&upharpoonright;", "\u21BE");
        lookupMap.put("&uplus;", "\u228E");
        lookupMap.put("&upsi;", "\u03C5");
        lookupMap.put("&upsih;", "\u03D2");
        lookupMap.put("&upsilon;", "\u03C5");
        lookupMap.put("&upuparrows;", "\u21C8");
        lookupMap.put("&urcorn;", "\u231D");
        lookupMap.put("&urcorner;", "\u231D");
        lookupMap.put("&urcrop;", "\u230E");
        lookupMap.put("&uring;", "\u016F");
        lookupMap.put("&urtri;", "\u25F9");
        lookupMap.put("&uscr;", "\uD835\uDCCA");
        lookupMap.put("&utdot;", "\u22F0");
        lookupMap.put("&utilde;", "\u0169");
        lookupMap.put("&utri;", "\u25B5");
        lookupMap.put("&utrif;", "\u25B4");
        lookupMap.put("&uuarr;", "\u21C8");
        lookupMap.put("&uuml", "\u00FC");
        lookupMap.put("&uuml;", "\u00FC");
        lookupMap.put("&uwangle;", "\u29A7");
        lookupMap.put("&vArr;", "\u21D5");
        lookupMap.put("&vBar;", "\u2AE8");
        lookupMap.put("&vBarv;", "\u2AE9");
        lookupMap.put("&vDash;", "\u22A8");
        lookupMap.put("&vangrt;", "\u299C");
        lookupMap.put("&varepsilon;", "\u03F5");
        lookupMap.put("&varkappa;", "\u03F0");
        lookupMap.put("&varnothing;", "\u2205");
        lookupMap.put("&varphi;", "\u03D5");
        lookupMap.put("&varpi;", "\u03D6");
        lookupMap.put("&varpropto;", "\u221D");
        lookupMap.put("&varr;", "\u2195");
        lookupMap.put("&varrho;", "\u03F1");
        lookupMap.put("&varsigma;", "\u03C2");
        lookupMap.put("&varsubsetneq;", "\u228A\uFE00");
        lookupMap.put("&varsubsetneqq;", "\u2ACB\uFE00");
        lookupMap.put("&varsupsetneq;", "\u228B\uFE00");
        lookupMap.put("&varsupsetneqq;", "\u2ACC\uFE00");
        lookupMap.put("&vartheta;", "\u03D1");
        lookupMap.put("&vartriangleleft;", "\u22B2");
        lookupMap.put("&vartriangleright;", "\u22B3");
        lookupMap.put("&vcy;", "\u0432");
        lookupMap.put("&vdash;", "\u22A2");
        lookupMap.put("&vee;", "\u2228");
        lookupMap.put("&veebar;", "\u22BB");
        lookupMap.put("&veeeq;", "\u225A");
        lookupMap.put("&vellip;", "\u22EE");
        lookupMap.put("&verbar;", "\u007C");
        lookupMap.put("&vert;", "\u007C");
        lookupMap.put("&vfr;", "\uD835\uDD33");
        lookupMap.put("&vltri;", "\u22B2");
        lookupMap.put("&vnsub;", "\u2282\u20D2");
        lookupMap.put("&vnsup;", "\u2283\u20D2");
        lookupMap.put("&vopf;", "\uD835\uDD67");
        lookupMap.put("&vprop;", "\u221D");
        lookupMap.put("&vrtri;", "\u22B3");
        lookupMap.put("&vscr;", "\uD835\uDCCB");
        lookupMap.put("&vsubnE;", "\u2ACB\uFE00");
        lookupMap.put("&vsubne;", "\u228A\uFE00");
        lookupMap.put("&vsupnE;", "\u2ACC\uFE00");
        lookupMap.put("&vsupne;", "\u228B\uFE00");
        lookupMap.put("&vzigzag;", "\u299A");
        lookupMap.put("&wcirc;", "\u0175");
        lookupMap.put("&wedbar;", "\u2A5F");
        lookupMap.put("&wedge;", "\u2227");
        lookupMap.put("&wedgeq;", "\u2259");
        lookupMap.put("&weierp;", "\u2118");
        lookupMap.put("&wfr;", "\uD835\uDD34");
        lookupMap.put("&wopf;", "\uD835\uDD68");
        lookupMap.put("&wp;", "\u2118");
        lookupMap.put("&wr;", "\u2240");
        lookupMap.put("&wreath;", "\u2240");
        lookupMap.put("&wscr;", "\uD835\uDCCC");
        lookupMap.put("&xcap;", "\u22C2");
        lookupMap.put("&xcirc;", "\u25EF");
        lookupMap.put("&xcup;", "\u22C3");
        lookupMap.put("&xdtri;", "\u25BD");
        lookupMap.put("&xfr;", "\uD835\uDD35");
        lookupMap.put("&xhArr;", "\u27FA");
        lookupMap.put("&xharr;", "\u27F7");
        lookupMap.put("&xi;", "\u03BE");
        lookupMap.put("&xlArr;", "\u27F8");
        lookupMap.put("&xlarr;", "\u27F5");
        lookupMap.put("&xmap;", "\u27FC");
        lookupMap.put("&xnis;", "\u22FB");
        lookupMap.put("&xodot;", "\u2A00");
        lookupMap.put("&xopf;", "\uD835\uDD69");
        lookupMap.put("&xoplus;", "\u2A01");
        lookupMap.put("&xotime;", "\u2A02");
        lookupMap.put("&xrArr;", "\u27F9");
        lookupMap.put("&xrarr;", "\u27F6");
        lookupMap.put("&xscr;", "\uD835\uDCCD");
        lookupMap.put("&xsqcup;", "\u2A06");
        lookupMap.put("&xuplus;", "\u2A04");
        lookupMap.put("&xutri;", "\u25B3");
        lookupMap.put("&xvee;", "\u22C1");
        lookupMap.put("&xwedge;", "\u22C0");
        lookupMap.put("&yacute", "\u00FD");
        lookupMap.put("&yacute;", "\u00FD");
        lookupMap.put("&yacy;", "\u044F");
        lookupMap.put("&ycirc;", "\u0177");
        lookupMap.put("&ycy;", "\u044B");
        lookupMap.put("&yen", "\u00A5");
        lookupMap.put("&yen;", "\u00A5");
        lookupMap.put("&yfr;", "\uD835\uDD36");
        lookupMap.put("&yicy;", "\u0457");
        lookupMap.put("&yopf;", "\uD835\uDD6A");
        lookupMap.put("&yscr;", "\uD835\uDCCE");
        lookupMap.put("&yucy;", "\u044E");
        lookupMap.put("&yuml", "\u00FF");
        lookupMap.put("&yuml;", "\u00FF");
        lookupMap.put("&zacute;", "\u017A");
        lookupMap.put("&zcaron;", "\u017E");
        lookupMap.put("&zcy;", "\u0437");
        lookupMap.put("&zdot;", "\u017C");
        lookupMap.put("&zeetrf;", "\u2128");
        lookupMap.put("&zeta;", "\u03B6");
        lookupMap.put("&zfr;", "\uD835\uDD37");
        lookupMap.put("&zhcy;", "\u0436");
        lookupMap.put("&zigrarr;", "\u21DD");
        lookupMap.put("&zopf;", "\uD835\uDD6B");
        lookupMap.put("&zscr;", "\uD835\uDCCF");
        lookupMap.put("&zwj;", "\u200D");
        lookupMap.put("&zwnj;", "\u200C");
    }

    private static final Pattern CHARSET_EXTRACTION_PATTERN = Pattern.compile(
            "<meta\\s+(charset\\s*=\\s*['\"]([^'\"]+)['\"]|http-equiv\\s*=\\s*['\"]Content-Type['\"]\\s+content\\s*=\\s*['\"]text/html;\\s*charset=([^'\"]+)['\"]|content\\s*=\\s*['\"]text/html;\\s*charset=([^'\"]+)['\"]\\s+http-equiv\\s*=\\s*['\"]Content-Type['\"])[^>]*>",
            Pattern.CASE_INSENSITIVE
        );

    private static final Pattern s_clean_trailing_whitespaces = Pattern.compile("\\p{Z}*$");
    private static final Pattern s_clean_leading_whitespaces = Pattern.compile("^\\p{Z}*");

    private static final Pattern BR_TAG_PATTERN = Pattern.compile("< *[bB][rR] */?>");
    private static final Pattern SCRIPT_TAG_PATTERN = Pattern.compile("(?is)<SCRIPT[^>]*>.*?</SCRIPT>");
    private static final Pattern SVG_TAG_PATTERN = Pattern.compile("(?is)<SVG[^>]*>.*?</SVG>");
    private static final Pattern STYLE_TAG_PATTERN = Pattern.compile("(?is)<STYLE[^>]*>.*?</STYLE>");
    private static final Pattern GENERIC_TAG_PATTERN = Pattern.compile("<[^>]*>");

    /**
     * Slurp the content of a HTML file
     * @param file HTML file
     * @return content of the file
     */
    public static String slurpFile(final FileSection file) {
        final Charset charset = getCharset(file).orElse(StandardCharsets.UTF_8);
        return FileHelper.slurpFileSection(file, charset);
    }

    /**
     * Determinate the charset of a file
     * @param file HTML file
     * @return charset of the file
     */
    public static Optional<Charset> getCharset(final FileSection file) {
        final String data = FileHelper.slurpFileSection(file, StandardCharsets.UTF_8);
        final int length = data.length();
        for (int i = 0; i < length; i++) {
            if (data.startsWith("<meta", i)) {
                final int j = data.indexOf('>', i);
                if (j < 0) {
                    return Optional.empty();
                }
                final Optional<Charset> charset = extractCharsetFromString(data.substring(i, j + 1));
                if (charset.isPresent()) {
                    return charset;
                }
            }
        }
        return Optional.empty();
    }

    private static Optional<Charset> extractCharsetFromString(final String str) {
        final Matcher matcher = CHARSET_EXTRACTION_PATTERN.matcher(str);
        if (matcher.find()) {
            if (matcher.group(2) != null) {
                return createCharsetFromName(matcher.group(2));
            } else if (matcher.group(3) != null) {
                return createCharsetFromName(matcher.group(3));
            } else if (matcher.group(4) != null) {
                return createCharsetFromName(matcher.group(4));
            }
        }
        return Optional.empty();
    }

    private static Optional<Charset> createCharsetFromName(final String charsetName) {
        try {
            final Charset charset = Charset.forName(charsetName);
            return Optional.of(charset);
        } catch (final UnsupportedCharsetException e) {
            Logger.log(Logger.Level.INFO)
                  .append("Invalid charset name")
                  .append(e);
            return Optional.empty();
        }
    }

    /**
     * Extract the text from an HTML string
     * @param input dirty HTML
     * @return clean text
     */
    public static final String cleanContent(final String input) {
        final String s1 = removeHtmlTags(input);
        final String s2 = unescape(s1);
        final String s3 = removeNewlines(s2);
        final String s4 = cleanAndUnduplicateSpace(s3);
        return trim(s4);
    }

    /**
     * Replace encoded characters by their real characters in an HTML string
     * @param input dirty HTML
     * @return resulting text
     */
    public static final String unescape(final String input) {
        // from https://stackoverflow.com/questions/994331/how-to-unescape-html-character-entities-in-java
        final int MIN_ESCAPE = 2;
        final int MAX_ESCAPE = 32;
        StringWriter writer = null;
        final int totalLength = input.length();
        int i = 1;
        int st = 0;
        while (true) {
            // look for '&'
            while (i < totalLength && input.charAt(i-1) != '&') {
                i++;
            }
            if (i >= totalLength) {
                break;
            }

            // found '&', look for end
            int j = i;
            while (j < totalLength && j < (i + MAX_ESCAPE + 1) && (Character.isLetterOrDigit(input.charAt(j)) || ((input.charAt(j) == '#') && (j == i)))) {
                j++;
            }
            if (j < (i + MIN_ESCAPE) || j == (i + MAX_ESCAPE + 1)) {
                i++;
                continue;
            }

            // found escape
            if (input.charAt(i) == '#') {
                // numeric escape
                int k = i + 1;
                int radix = 10;

                final char firstChar = input.charAt(k);
                if (firstChar == 'x' || firstChar == 'X') {
                    k++;
                    radix = 16;
                }

                try {
                    final int entityValue = Integer.parseInt(input.substring(k, j), radix);

                    if (writer == null) {
                        writer = new StringWriter(input.length());
                    }
                    writer.append(input.substring(st, i - 1));

                    if (entityValue > 0xFFFF) {
                        final char[] chrs = Character.toChars(entityValue);
                        writer.write(chrs[0]);
                        writer.write(chrs[1]);
                    } else {
                        writer.write(entityValue);
                    }

                } catch (@SuppressWarnings("unused") final NumberFormatException ex) {
                    i++;
                    continue;
                }
            } else {
                // named escape
                final int e = ((j < totalLength) && (input.charAt(j) == ';')) ? 1 : 0;
                final String name = input.substring(i - 1, j + e);
                final String value = lookupMap.get(name);
                if (value == null) {
                    i++;
                    continue;
                }

                if (writer == null) {
                    writer = new StringWriter(input.length());
                }
                writer.append(input.substring(st, i - 1));
                writer.append(value);
            }

            // skip escape
            if ((j < totalLength) && (input.charAt(j) == ';')) {
                st = j + 1;
            } else {
                st = j;
            }
            i = st;
        }

        if (writer != null) {
            writer.append(input.substring(st, totalLength));
            return writer.toString();
        }
        return input;
    }

    /**
     * @param input dirty HTML
     * @return resulting text
     */
    public static final String cleanAndUnduplicateSpace(final String input) {

        final StringBuilder builder = new StringBuilder(input.length());
        boolean previousWasSpace = false;

        for (int i = 0; i < input.length();) {
            final int character = input.codePointAt(i);
            if (Character.isWhitespace(character)) {
                if (!previousWasSpace) {
                    builder.appendCodePoint(' ');
                }
                previousWasSpace = true;
            } else {
                builder.appendCodePoint(character);
                previousWasSpace = false;
            }
            i += Character.charCount(character);
        }

        return builder.toString();
    }

    /**
     * @param input dirty HTML
     * @return resulting text
     */
    public static final String trim(final String input) {

        final String s1 = s_clean_leading_whitespaces.matcher(input).replaceAll("");
        return s_clean_trailing_whitespaces.matcher(s1).replaceAll("");
    }

    /**
     * @param input dirty HTML
     * @return resulting text
     */
    public static final String removeHtmlTags(final String input) {

        String result = BR_TAG_PATTERN.matcher(input).replaceAll("\n");
        result = SCRIPT_TAG_PATTERN.matcher(result).replaceAll("");
        result = SVG_TAG_PATTERN.matcher(result).replaceAll("");
        result = STYLE_TAG_PATTERN.matcher(result).replaceAll("");
        return GENERIC_TAG_PATTERN.matcher(result).replaceAll("");
    }

    private static final String removeNewlines(final String input) {
        return input.replace('\n', ' ').trim();
    }

    /**
     * Convert a string to HTML
     * @param str String
     * @return String converted to HTML
     */
    public static String convertStringToHtml(final String str) {
        return str.replace("&", "&amp;")
                  .replace("<","&lt;")
                  .replace(">","&gt;")
                  .replace("\n","<br>")
                  .replaceAll("(https?|ftp|file)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]", "<a href='$0'>$0</a>");
    }
}
